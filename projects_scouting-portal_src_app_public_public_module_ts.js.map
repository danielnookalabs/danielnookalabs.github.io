{"version":3,"file":"projects_scouting-portal_src_app_public_public_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AACoE;AAIQ;AACoB;;;;;;;;;ICmB1F,uEAA8C;IAAA,uDAAyC;;IAAA,4DAAO;;IAAhD,0DAAyC;IAAzC,yJAAyC;;;IACvF,uEAA2C;IAAA,uDAA6C;;IAAA,4DAAO;;IAApD,0DAA6C;IAA7C,6JAA6C;;;IAF1F,4EAAuH;IACrH,uHAA8F;IAC9F,uHAA+F;IACjG,4DAAQ;;;IAFC,0DAAqC;IAArC,yIAAqC;IACrC,0DAAkC;IAAlC,sIAAkC;;ADbxC,MAAM,eAAe;IAI1B,YACU,GAAgB,EAChB,OAAe,EACf,YAAyB,EACzB,iBAAmC,EACnC,iBAAmC;QAJnC,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QAP7C,iBAAY,GAAG,KAAK,CAAC;QASnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,6DAAsB,CAAC,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,WAAmB;;QACxB,UAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,0CAAE,WAAW,EAAE,CAAC;IAC5C,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;SAC9G;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,yBAAyB,EAAE,2BAA2B,CAAC,CAAC;SACrF;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,sEAA0B,CAAC,CAAC,CAAC;IACnF,CAAC;;8EAnCU,eAAe;6GAAf,eAAe;QCb5B,0EAAkE;QAAxB,2IAAY,cAAU,IAAC;QAC/D,wEAAsB;QAAA,uDAAgC;;QAAA,4DAAK;QAC3D,wEAAO;QAAA,uDAAuC;;QAAA,4DAAQ;QACtD,yEAAqE;QACnE,kEAAiD;QACjD,sEAAK;QACH,yEAAyB;QAAA,yEAAa;QAAA,4DAAK;QAC3C,wEAAuB;QAAA,wGAA4C;QAAA,4DAAI;QACzE,4DAAM;QACR,4DAAM;QAEN,0EAAmC;QACjC,4EAAuC;QAAA,wDAAgC;;QAAA,4DAAQ;QAC/E,4EAUE;QATA,qIAAQ,WAAO,OAAO,CAAC,IAAC;;QAD1B,4DAUE;QACF,iHAGQ;QACV,4DAAM;QACN,uEAAK;QACH,8EAA0F;QACxF,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACN,2EAAwB;QACtB,8EAAmF;QAAtB,wIAAS,eAAW,IAAC;QAChF,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;;QAvCD,+EAAkB;QACA,0DAAgC;QAAhC,gJAAgC;QAC/C,0DAAuC;QAAvC,wJAAuC;QAUL,2DAAgC;QAAhC,kJAAgC;QAMrE,0DAAgD;QAAhD,uKAAgD;QAIhD,yEAAgB;QAEV,0DAAoE;QAApE,4OAAoE;QAO1E,0DACF;QADE,kKACF;QAIE,0DACF;QADE,6JACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCuF;AAQpB;AAC8B;;;;;;;;;;ICFnG,wEAA+B;IAC7B,uDACF;;IAAA,qEAAe;;IADb,0DACF;IADE,8JACF;;;IACA,wEAAgC;IAC9B,uDACF;;IAAA,qEAAe;;IADb,0DACF;IADE,2JACF;;ADIK,MAAM,qBAAqB;IAMhC,YACU,kBAAqC,EACrC,oBAAyC,EACzC,aAA2B,EAC3B,OAAe,EACf,iBAAmC,EACnC,YAAyB;QALzB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,iBAAY,GAAZ,YAAY,CAAa;QAX1B,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QAElB,UAAK,GAAe,IAAI,6DAAU,EAAE,CAAC;IAS1C,CAAC;IAEJ,oFAAoF;IAC9E,gBAAgB;;YACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,kFAA+B,CAAC,CAAC;gBACnF,+CAA+C;gBAC/C,MAAM,IAAI,GAAwB;oBAChC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;oBACvB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzB,QAAQ,EAAE,wFAAqB;iBAChC,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,MAA6B,EAAE,EAAE;oBAC/E,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,cAAc,EAAE;wBAC1C,2DAA2D;wBAC3D,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE;4BAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,mDAAmD,EACnD,qDAAqD,CACtD,CAAC;yBACH;wBAED,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC5D;yBAAM,IAAI,MAAM,CAAC,cAAc,EAAE;wBAChC,+DAA+D;wBAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,mDAAmD,EACnD,qDAAqD,CACtD,CAAC;wBACF,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC3D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6FAA6B,CAAC,yFAA6B,CAAC,CAAC,CAAC;qBACrF;yBAAM,IAAI,MAAM,CAAC,SAAS,EAAE;wBAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6FAA6B,CAAC,iGAAqC,CAAC,CAAC,CAAC;qBAC7F;yBAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE;wBAC/C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,6BAA6B,EAAE,+BAA+B,CAAC,CAAC;qBAC9F;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,sCAAsC,EAAE,wCAAwC,CAAC,CAAC;aAC/G;QACH,CAAC;KAAA;;0FAtDU,qBAAqB;mHAArB,qBAAqB;QCjBlC,4EAKC;QADC,6IAAS,sBAAkB,IAAC;QAE5B,oEAAgG;QAEhG,mIAEe;QACf,mIAEe;QACjB,4DAAS;;QANQ,0DAAc;QAAd,8EAAc;QAGd,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVoC;AAIuC;AAEX;;;;;;;;;;;;ICG5F,0EAAkE;IAChE,mEAA+E;IAC/E,sEAAK;IACH,yEAAwD;IAAA,uDAAgD;;IAAA,4DAAK;IAC7G,wEAAyD;IAAA,uDAA+C;;IAAA,4DAAI;IAC9G,4DAAM;IACR,4DAAM;;IAHsD,0DAAgD;IAAhD,gKAAgD;IAC/C,0DAA+C;IAA/C,+JAA+C;;;IAG5G,0EAA4D;IAC1D,mEAA+E;IAC/E,sEAAK;IACH,yEAAwD;IAAA,uDAAoC;;IAAA,4DAAK;IACjG,wEAAyD;IAAA,uDAAyC;;IAAA,4DAAI;IACxG,4DAAM;IACR,4DAAM;;IAHsD,0DAAoC;IAApC,oJAAoC;IACnC,0DAAyC;IAAzC,yJAAyC;;;IAiBlG,uEAA8C;IAAA,uDAAwC;;IAAA,4DAAO;;IAA/C,0DAAwC;IAAxC,wJAAwC;;;IACtF,uEAA2C;IAAA,uDAA4C;;IAAA,4DAAO;;IAAnD,0DAA4C;IAA5C,4JAA4C;;;IAFzF,4EAAuH;IACrH,sHAA6F;IAC7F,sHAA8F;IAChG,4DAAQ;;;IAFC,0DAAqC;IAArC,yIAAqC;IACrC,0DAAkC;IAAlC,sIAAkC;;;IAwBzC,uEAA6C;IAAA,uDAA2C;;IAAA,4DAAO;;IAAlD,0DAA2C;IAA3C,2JAA2C;;;IACxF,uEAA4C;IAAA,uDAAyC;;IAAA,4DAAO;;IAAhD,0DAAyC;IAAzC,yJAAyC;;;IAFvF,4EAAuH;IACrH,sHAA+F;IAC/F,sHAA4F;IAC9F,4DAAQ;;;IAFC,0DAAoC;IAApC,uIAAoC;IACpC,0DAAmC;IAAnC,sIAAmC;;ADlD3C,MAAM,cAAc;IAOzB,YACU,GAAgB,EAChB,OAAe,EACf,YAAyB,EACzB,iBAAmC,EACnC,eAA+B,EAC/B,aAA2B;QAL3B,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,kBAAa,GAAb,aAAa,CAAc;QAXrC,iBAAY,GAAG,KAAK,CAAC;QACrB,6BAAwB,GAAG,KAAK,CAAC;QACjC,uBAAkB,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAwB,EAAE,CAAC;QAU/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,6DAAsB,CAAC,CAAC;YAC1D,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,iBAAsC,EAAE,EAAE;YAC3F,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;aAC7C;QACH,CAAC,CAAC,EACF,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACvC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC5C,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,yBAAyB,EAAE,2BAA2B,CAAC,CAAC;SACtF;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,EAAE,0BAA0B,CAAC,CAAC;SACnF;IACH,CAAC;IAED,SAAS,CAAC,YAA2B;QACnC,8HAA8H;QAC9H,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,SAA8B,EAAE,EAAE;YACzF,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,iFAAqC,CAAC,CAAC,CAAC;aAC7F;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,gFAAoC,CAAC,CAAC,CAAC;IAC7F,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,yEAA6B,CAAC,CAAC,CAAC;IACtF,CAAC;;4EA5EU,cAAc;4GAAd,cAAc;QCd3B,yEAAwB;QACtB,0EAAkE;QAAxB,0IAAY,cAAU,IAAC;QAC/D,wEAAsB;QAAA,uDAA+B;;QAAA,4DAAK;QAC1D,yEAAqE;QACnE,kEAAiD;QACjD,sEAAK;QACH,wEAAyB;QAAA,iFAAsB;QAAA,4DAAK;QACpD,wEAAuB;QAAA,wGAA4C;QAAA,4DAAI;QACzE,4DAAM;QACR,4DAAM;QACN,4GAMM;QACN,4GAMM;QACN,0EAAuB;QACrB,4EAAsC;QAAA,wDAA+B;;QAAA,4DAAQ;QAC7E,6EAUE;QATA,oIAAQ,YAAQ,IAAC;;QADnB,4DAUE;QACF,iHAGQ;QACV,4DAAM;QACN,0EAAuB;QACrB,6EAAyC;QAAA,wDAAkC;;QAAA,4DAAQ;QACnF,2EAA2B;QACzB,6EAYE;QAXA,oIAAQ,YAAQ,IAAC;;QADnB,4DAYE;QACF,8EAA6G;QAAlE,+KAAsC;QAC/E,oEAAsE;QACxE,4DAAS;QACX,4DAAM;QACN,iHAGQ;QACV,4DAAM;QACN,8EAA0G;QAAhF,uIAAS,gBAAY,IAAC;QAC9C,wDACF;;QAAA,4DAAS;QACT,uEAAK;QACH,8EAA2E;QACzE,wDACF;;QAAA,4DAAS;QACT,uEAAK;QACH,2EAAuB;QAAA,8DAAE;QAAA,4DAAM;QAC/B,sFAAmD;QACrD,4DAAM;QACR,4DAAM;QACN,2EAAuB;QACrB,8EAA0G;QAA9E,uIAAS,kBAAc,IAAC;QAClD,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QApFE,0DAAkB;QAAlB,+EAAkB;QACA,0DAA+B;QAA/B,gJAA+B;QAQ/C,0DAA8B;QAA9B,8FAA8B;QAO9B,0DAAwB;QAAxB,wFAAwB;QAQU,0DAA+B;QAA/B,iJAA+B;QAMnE,0DAA+C;QAA/C,sKAA+C;QAI/C,yEAAgB;QAEV,0DAAoE;QAApE,4OAAoE;QAMnC,0DAAkC;QAAlC,oJAAkC;QAOvE,0DAAgD;QAAhD,uKAAgD;QAGhD,0FAA6B;QAMd,0DAAkD;QAAlD,sGAAkD;QAG7D,0DAAiE;QAAjE,sOAAiE;QAMzE,0DACF;QADE,sKACF;QAGI,0DACF;QADE,oKACF;QAQE,0DACF;QADE,+JACF;;;;;;;;;;;;;;;;;;;ACjFwD;;;AAQvD,MAAM,qBAAqB;IAGhC,YAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QAFvD,mBAAc,GAAG,qDAAc,CAAC;IAE0B,CAAC;IAE3D,cAAc,CAAC,IAAY;QACzB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iEAA0B,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;0FARU,qBAAqB;mHAArB,qBAAqB;QCTlC,4EAA8B;QAC5B,sEAAK;QACH,sEAAK;QACH,4EAA0B;QAAA,uDAAkC;;QAAA,4DAAS;QACrE,4EAA0B;QAAA,uDAAmC;;QAAA,4DAAS;QACtE,4EAA0B;QAAA,wDAAgC;;QAAA,4DAAS;QACnE,6EAA0B;QAAA,wDAAkC;;QAAA,4DAAS;QACrE,6EAA0B;QAAA,wDAA+B;;QAAA,4DAAS;QAGpE,4DAAM;QACR,4DAAM;QACN,uEAAK;QACH,uEAAK;QACH,6EAAsE;QAA5C,8IAAS,yCAAiC,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QAC/G,6EAAsE;QAA5C,8IAAS,yCAAiC,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACjH,4DAAM;QACR,4DAAM;QACN,uEAAK;QACH,4EAA+B;QAAA,wDAAoC;;QAAA,4DAAQ;QAC7E,4DAAM;QACR,4DAAS;;QAlBuB,0DAAkC;QAAlC,kJAAkC;QAClC,0DAAmC;QAAnC,oJAAmC;QACnC,0DAAgC;QAAhC,kJAAgC;QAChC,0DAAkC;QAAlC,oJAAkC;QAClC,0DAA+B;QAA/B,iJAA+B;QAOa,0DAAgC;QAAhC,kJAAgC;QAChC,0DAAgC;QAAhC,kJAAgC;QAIzE,0DAAoC;QAApC,sJAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBH;AAGhC;AAEqE;AAGT;;;;;;;;;;;;;ICOtF,uDACF;;;;IADE,yJACF;;;IAEE,uDACF;;;;IADE,iKACF;;;IASF,wEAA+D;IAC7D,0EAAuB;IAAA,6DAAE;IAAA,4DAAM;IAC/B,yFAAqE;IACrE,6EAAoH;IAClH,qEAAkG;IAClG,uDACF;;IAAA,4DAAS;IACX,qEAAe;;IALY,0DAAiB;IAAjB,0EAAiB;IAGxC,0DACF;IADE,oLACF;;ADnBD,MAAM,0BAA0B;IASrC,YACU,GAAgB,EAChB,OAAe,EACf,iBAAmC,EACnC,oBAAyC,EACzC,YAAyB,EACzB,kBAAqC;QALrC,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,iBAAY,GAAZ,YAAY,CAAa;QACzB,uBAAkB,GAAlB,kBAAkB,CAAmB;QAbvC,kBAAa,GAAG,IAAI,8CAAY,EAAE,CAAC;QAE3C,uBAAkB,GAAY,KAAK,CAAC;QACpC,qBAAgB,GAAY,KAAK,CAAC;QAElC,gBAAW,GAAG,uDAAgB,CAAC;QAU7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,kBAAkB,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,+DAAmB,EAAE,qEAA8B,CAAC,CAAC;SACvH,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,CAAC,CAC3G,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC,CACvG,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5F,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACjF,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,qFAAyC,CAAC,CAAC,CAAC;SACjG;aAAM;YACL,kEAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,sCAAsC,EAAE,wCAAwC,CAAC,CAAC;SAC/G;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;IAChD,CAAC;;oGAvDU,0BAA0B;wHAA1B,0BAA0B;QChBvC,yEAAwB;QACtB,wEAAqB;QAEnB,uDACF;;QAAA,4DAAK;QACL,0EAA6E;QAAxB,sJAAY,cAAU,IAAC;QAC1E,yEAAuB;QACrB,2EAAsC;QAAA,uDAAkD;;QAAA,4DAAQ;QAChG,gFAMC;QALC,sJAAS,qBAAiB,IAAC;;QAM3B,wIAEc;QACd,wIAEc;QAChB,4DAAa;QACf,4DAAM;QACN,uEAAK;QACH,6EAA2E;QACzE,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACN,uEAAK;QACH,0IAOe;QACjB,4DAAM;QACN,2EAAuB;QACrB,8EAA8F;QAAxE,mJAAS,YAAQ,IAAC;QACtC,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAzCF,0DACF;QADE,wKACF;QACM,0DAAkB;QAAlB,+EAAkB;QAEkB,0DAAkD;QAAlD,mKAAkD;QAMtF,0DAAuE;QAAvE,8LAAuE;QAHvE,oFAAuB;QAevB,0DACF;QADE,6KACF;QAGe,0DAA8C;QAA9C,kHAA8C;QAW3D,0DACF;QADE,4KACF;;;;;;;;;;;;;;;;;;;;;;;;ACrCqF;AAEK;;;;;;;;;ICH5F,wEAA0C;IAAA,uDAAiD;;IAAA,4DAAI;;IAArD,0DAAiD;IAAjD,iKAAiD;;;IAuB3F,wEAA+B;IAC7B,0EAAoD;IAClD,0EAAuC;IACrC,wEAAsB;IAAA,uDAAmD;;IAAA,4DAAI;IAC7E,uEAAqB;IAAA,uDAAqD;;IAAA,4DAAI;IAChF,4DAAM;IACN,0EAAuC;IACrC,yEAA2B;IAAA,oEAAQ;IAAA,4DAAI;IACvC,oEAAmC;IACnC,4EAAmB;IACjB,4EAAkC;IAAA,wDAAqB;IAAA,4DAAO;IAChE,4DAAO;IACP,yEAA+B;IAAA,iEAAK;IAAA,4DAAI;IAC1C,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAZa,0DAAmD;IAAnD,mKAAmD;IACpD,0DAAqD;IAArD,qKAAqD;IAMtC,0DAAqB;IAArB,gGAAqB;;;IAO/D,wEAAgC;IAC9B,0EAAoD;IAClD,0EAAuC;IACrC,wEAAsB;IAAA,uDAAmD;;IAAA,4DAAI;IAC7E,uEAAqB;IAAA,uDAAqD;;IAAA,4DAAI;IAChF,4DAAM;IACN,0EAAuC;IACrC,yEAA2B;IAAA,wDAAqB;IAAA,4DAAI;IACtD,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAPa,0DAAmD;IAAnD,mKAAmD;IACpD,0DAAqD;IAArD,qKAAqD;IAG/C,0DAAqB;IAArB,gGAAqB;;;IAS9C,sFAIwB;;;IAFtB,2FAA2B;;;IALjC,sEAAuB;IACrB,wEAAoB;IAAA,uDAAkD;;IAAA,4DAAI;IAC1E,0EAAqB;IACnB,8JAIwB;IAC1B,4DAAM;IACR,4DAAM;;;IARgB,0DAAkD;IAAlD,kKAAkD;IAGjE,0DAAyB;IAAzB,mGAAyB;;;;IAMhC,6EAOC;IADC,0SAAS,sBAAe,IAAC;IAEzB,uDACF;;IAAA,4DAAS;;IADP,0DACF;IADE,8KACF;;AD7DD,MAAM,wBAAwB;IAMnC,YACU,OAAe,EACf,oBAAyC,EACzC,cAAgC,EAChC,eAA+B,EAC/B,iBAAmC;QAJnC,YAAO,GAAP,OAAO,CAAQ;QACf,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,mBAAc,GAAd,cAAc,CAAkB;QAChC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAkB;QAPrC,mBAAc,GAAwB,EAAE,CAAC;QAS/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY,IAAI,MAAM,CAAC;IAC1E,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YACrF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,iBAAsC,EAAE,EAAE;YAC3F,IAAI,iBAAiB,KAAK,SAAS,EAAE;gBACnC,IAAI,iBAAiB,EAAE;oBACrB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;qBAAM;oBACL,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,wCAAwC,EAAE,0CAA0C,CAAC,CAAC;iBACpH;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,sEAA0B,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,aAAa;QACX,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;IAC5C,CAAC;;gGA/CU,wBAAwB;sHAAxB,wBAAwB;QCdrC,yEAAsB;QACpB,yEAAwC;QACtC,wEAAqB;QAAA,uDAA8C;;QAAA,4DAAK;QACxE,gHAA+F;QAC/F,yEAAsC;QACpC,yEAA2C;QACzC,yEAA6C;QAC3C,uEAAiB;QAAA,wDAA6C;;QAAA,4DAAI;QAClE,wEAAqB;QAAA,wDAAoB;QAAA,4DAAI;QAC/C,4DAAM;QACN,0EAA6C;QAC3C,wEAAiB;QAAA,wDAA8C;;QAAA,4DAAI;QACnE,wEAAqB;QAAA,wDAAgB;QAAA,4DAAI;QAC3C,4DAAM;QACR,4DAAM;QACN,0EAA2C;QACzC,0EAA6C;QAC3C,wEAAiB;QAAA,wDAAiD;;QAAA,4DAAI;QACtE,wEAAqB;QAAA,wDAAmB;QAAA,4DAAI;QAC9C,4DAAM;QACN,0EAA6C;QAC3C,wEAAiB;QAAA,wDAA8C;;QAAA,4DAAI;QACnE,wEAAqB;QAAA,wDAAoB;QAAA,4DAAI;QAC/C,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,yIAee;QAEf,yIAUe;QACf,uEAAK;QACH,2EAAmC;QACjC,sHASM;QACN,6HASS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7EmB,0DAA8C;QAA9C,+JAA8C;QAC/D,0DAAe;QAAf,+EAAe;QAII,0DAA6C;QAA7C,+JAA6C;QACzC,0DAAoB;QAApB,mFAAoB;QAGxB,0DAA8C;QAA9C,gKAA8C;QAC1C,0DAAgB;QAAhB,+EAAgB;QAKpB,0DAAiD;QAAjD,mKAAiD;QAC7C,0DAAmB;QAAnB,kFAAmB;QAGvB,0DAA8C;QAA9C,gKAA8C;QAC1C,0DAAoB;QAApB,mFAAoB;QAIhC,0DAAc;QAAd,8EAAc;QAiBd,0DAAe;QAAf,+EAAe;QAapB,0DAAe;QAAf,+EAAe;QAYlB,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnE2C;AAGM;AAGsB;AAC5D;;;;;;;;;;;;ICkBxB,uEAAkD;IAAA,uDAAsD;;IAAA,4DAAO;;IAA7D,0DAAsD;IAAtD,sKAAsD;;;IACxG,uEAA8C;IAAA,uDAA0D;;IAAA,4DAAO;;IAAjE,0DAA0D;IAA1D,0KAA0D;;;IAN1G,4EAIC;IACC,mIAA+G;IAC/G,mIAA+G;IACjH,4DAAQ;;;IAFC,0DAAyC;IAAzC,iJAAyC;IACzC,0DAAqC;IAArC,6IAAqC;;;IAuB5C,uEAAiD;IAAA,uDAAyD;;IAAA,4DAAO;;IAAhE,0DAAyD;IAAzD,yKAAyD;;;IAC1G,uEAA6C;IAAA,uDAA6D;;IAAA,4DAAO;;IAApE,0DAA6D;IAA7D,6KAA6D;;;IAN5G,4EAIC;IACC,mIAAiH;IACjH,mIAAiH;IACnH,4DAAQ;;;IAFC,0DAAwC;IAAxC,+IAAwC;IACxC,0DAAoC;IAApC,2IAAoC;;;IAmB3C,uEAA8C;IAAA,uDAAuD;;IAAA,4DAAO;;IAA9D,0DAAuD;IAAvD,uKAAuD;;;IACrG,uEAA2C;IAAA,uDAA2D;;IAAA,4DAAO;;IAAlE,0DAA2D;IAA3D,2KAA2D;;;IAFxG,4EAAuH;IACrH,mIAA4G;IAC5G,mIAA6G;IAC/G,4DAAQ;;;IAFC,0DAAqC;IAArC,yIAAqC;IACrC,0DAAkC;IAAlC,sIAAkC;;;IAyBzC,uEAAkD;IAAA,uDAA2D;;IAAA,4DAAO;;IAAlE,0DAA2D;IAA3D,2KAA2D;;;IAC7G,uEAAmD;IAAA,uDAEjD;;IAAA,4DAAO;;IAF0C,0DAEjD;IAFiD,+KAEjD;;;IARJ,4EAIC;IACC,mIAAoH;IACpH,mIAES;IACX,4DAAQ;;;IAJC,0DAAyC;IAAzC,iJAAyC;IACzC,0DAA0C;IAA1C,kJAA0C;;;IAgCjD,uEAA6C;IAAA,uDAA0D;;IAAA,4DAAO;;IAAjE,0DAA0D;IAA1D,0KAA0D;;;IACvG,uEAA6C;IAAA,uDAA8D;;IAAA,4DAAO;;IAArE,0DAA8D;IAA9D,8KAA8D;;;IAF7G,4EAAoH;IAClH,mIAA8G;IAC9G,mIAAkH;IACpH,4DAAQ;;;IAFC,0DAAoC;IAApC,uIAAoC;IACpC,0DAAoC;IAApC,uIAAoC;;;IAoC3C,uEAAoD;IAAA,uDAElD;;IAAA,4DAAO;;IAF2C,0DAElD;IAFkD,kLAElD;;;IACF,uEAAoD;IAAA,uDAElD;;IAAA,4DAAO;;IAF2C,0DAElD;IAFkD,8KAElD;;;IAVJ,4EAIC;IACC,mIAES;IACT,mIAES;IACX,4DAAQ;;;IANC,0DAA2C;IAA3C,qJAA2C;IAG3C,0DAA2C;IAA3C,qJAA2C;;AD1JvD,MAAM,2BAA2B;IAUtC,YACU,GAAgB,EAChB,OAAe,EACf,iBAAmC,EACnC,oBAAyC;QAHzC,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,yBAAoB,GAApB,oBAAoB,CAAqB;QAZ3C,kBAAa,GAAG,IAAI,8CAAY,EAAE,CAAC;QAE3C,iBAAY,GAAG,KAAK,CAAC;QACrB,wBAAmB,GAAG,KAAK,CAAC;QAW1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC;QAClE,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC;QAC9E,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;QAEhD,MAAM,kBAAkB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,+DAAmB,EAAE,gEAAyB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAqB,CAAC,CAAC;YACzH,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAqB,CAAC,CAAC;YACvH,KAAK,EAAE;gBACL,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACnF,CAAC,+DAAmB,EAAE,6DAAsB,CAAC;aAC9C;YACD,SAAS,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,+DAAmB,EAAE,iEAA0B,CAAC,CAAC;YAClF,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,kBAAkB,CAAC;YAC7F,eAAe,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,kBAAkB,CAAC;YACrF,YAAY,EAAE,CAAC,KAAK,EAAE,mEAAuB,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,iEAAiE;QACjE,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACrE,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,IAAI,SAAS,EAAE;gBAC7D,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;aAC/C;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACtC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACtC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,cAAc,mBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG,CAAC;IACnE,CAAC;IAED,gBAAgB;IAChB,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;aAChD;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;gBACvE,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,wCAAwC,EAAE,0CAA0C,CAAC,CAAC;aACpH;SACF;aAAM;YACL,kEAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uCAAuC,EAAE,yCAAyC,CAAC,CAAC;SACjH;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,yEAA6B,CAAC,CAAC,CAAC;IACtF,CAAC;;sGAlGU,2BAA2B;yHAA3B,2BAA2B;QCfxC,yEAAwB;QACtB,wEAAqB;QAEnB,uDACF;;QAAA,4DAAK;QACL,0EAAkE;QAAxB,uJAAY,cAAU,IAAC;QAC/D,yEAAiB;QACf,yEAA6B;QAC3B,yEAAuB;QACrB,2EAA2D;QAAA,uDAAiD;;QAAA,4DAAQ;QACpH,4EAUE;QATA,iJAAQ,eAAW,WAAW,CAAC,IAAC;;QADlC,4DAUE;QACF,6HAOQ;QACV,4DAAM;QACR,4DAAM;QACN,0EAA6B;QAC3B,0EAAuB;QACrB,4EAA0D;QAAA,wDAAoD;;QAAA,4DAAQ;QACtH,6EAUE;QATA,iJAAQ,eAAW,UAAU,CAAC,IAAC;;QADjC,4DAUE;QACF,6HAOQ;QACV,4DAAM;QACR,4DAAM;QACN,0EAA6B;QAC3B,0EAAuB;QACrB,6EAAuD;QAAA,wDAAkD;;QAAA,4DAAQ;QACjH,6EAUE;QATA,iJAAQ,eAAW,OAAO,CAAC,IAAC;;QAD9B,4DAUE;QACF,6HAGQ;QACV,4DAAM;QACR,4DAAM;QACN,0EAA6B;QAC3B,0EAAuB;QACrB,6EAA2D;QAAA,wDAEzD;;QAAA,4DAAQ;QACV,6EAUE;QATA,iJAAQ,eAAW,WAAW,CAAC,IAAC;;QADlC,4DAUE;QACF,6HASQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,sEAA+C;QAC/C,0EAAiB;QACf,0EAA6B;QAC3B,0EAAuB;QACrB,6EAA8F;QAC5F,wDACF;;QAAA,4DAAQ;QACR,2EAA2B;QACzB,6EAWE;QAVA,iJAAQ,eAAW,UAAU,CAAC,IAAC;;QADjC,4DAWE;QACF,8EAA6G;QAAlE,4LAAsC;QAC/E,oEAAsE;QACxE,4DAAS;QACX,4DAAM;QACN,6HAGQ;QACV,4DAAM;QACR,4DAAM;QACN,0EAA6B;QAC3B,0EAAuB;QACrB,6EAAqG;QACnG,wDACF;;QAAA,4DAAQ;QACR,2EAA2B;QACzB,6EAWE;QAVA,iJAAQ,eAAW,iBAAiB,CAAC,IAAC;;QADxC,4DAWE;QACF,8EAKC;QAFC,0MAAoD;QAGpD,oEAA6E;QAC/E,4DAAS;QACX,4DAAM;QACN,6HAWQ;QACV,4DAAM;QACR,4DAAM;QACN,2EAAiC;QAC/B,yEAAO;QAAA,wDAA8D;;QAAA,4DAAQ;QAC/E,4DAAM;QACR,4DAAM;QACN,2EAA0C;QACxC,6EAA6F;QAC7F,yEACG;QAAA,wDAA8C;;QAAA,yEAAW;QAAA,wDAAmD;;QAAA,4DAAI;QAAC,+DAClH;QAAA,yEAAW;QAAA,wDAAkD;;QAAA,4DAAI;QAAA,4DAClE;QACH,4DAAM;QACN,2EAAmC;QACjC,8EAAkG;QAA5E,oJAAS,YAAQ,IAAC;QACtC,wDACF;;QAAA,4DAAS;QACT,8EAA8D;QAC5D,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAhMF,0DACF;QADE,0KACF;QACM,0DAAkB;QAAlB,+EAAkB;QAI2C,0DAAiD;QAAjD,mKAAiD;QAM1G,0DAA+D;QAA/D,sLAA+D;QAE/D,yEAAgB;QAKf,0DAAgF;QAAhF,oQAAgF;QAWzB,0DAAoD;QAApD,sKAAoD;QAM5G,0DAAkE;QAAlE,yLAAkE;QAElE,yEAAgB;QAKf,0DAA6E;QAA7E,8PAA6E;QAWzB,0DAAkD;QAAlD,oKAAkD;QAMvG,0DAAwE;QAAxE,+LAAwE;QAExE,yEAAgB;QAIV,0DAAoE;QAApE,4OAAoE;QAQjB,0DAEzD;QAFyD,wKAEzD;QAMA,0DAAoE;QAApE,2LAAoE;QAEpE,yEAAgB;QAKf,0DAAgF;QAAhF,oQAAgF;QAgBrD,0DAA+D;QAA/D,4HAA+D;QAC3F,0DACF;QADE,kLACF;QAOI,0DAAmE;QAAnE,0LAAmE;QAEnE,yEAAgB;QAMD,0DAAkD;QAAlD,sGAAkD;QAG7D,0DAAiE;QAAjE,sOAAiE;QAQpC,0DAA+D;QAA/D,4HAA+D;QAClG,0DACF;QADE,yLACF;QAOI,0DAA0E;QAA1E,iMAA0E;QAE1E,yEAAgB;QAWD,0DAAyD;QAAzD,6GAAyD;QAIzE,0DAAsF;QAAtF,gRAAsF;QAcpF,0DAA8D;QAA9D,gLAA8D;QAIP,0DAAe;QAAf,wEAAe;QAE5E,0DAA8C;QAA9C,gKAA8C;QAAW,0DAAmD;QAAnD,qKAAmD;QAClG,0DAAkD;QAAlD,oKAAkD;QAK7D,0DACF;QADE,6KACF;QAEE,0DACF;QADE,8KACF;;;;;;;;;;;;;;;;;;;;;;;;ACrLC,MAAM,0BAA0B;IAGrC,YAAoB,oBAAyC,EAAU,OAAe;QAAlE,yBAAoB,GAApB,oBAAoB,CAAqB;QAAU,YAAO,GAAP,OAAO,CAAQ;QACpF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACzF,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;;oGAbU,0BAA0B;wHAA1B,0BAA0B;QCXvC,yEAAmD;QACjD,yEAAiB;QAIf,yEAAoB;QAClB,wEAAqB;QAAA,uDAA6C;;QAAA,4DAAK;QACvE,uEAAwB;QAAA,uDAAgD;;QAAA,4DAAI;QAC9E,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,oEAA6B;;QALF,0DAA6C;QAA7C,6JAA6C;QAC1C,0DAAgD;QAAhD,gKAAgD;;;;;;;;;;;;;;;;;;;;;;;ACNV;AAEoB;;;;;;;;;IC2BlF,uEAA6C;IAAA,uDAA+C;;IAAA,4DAAO;;IAAtD,0DAA+C;IAA/C,+JAA+C;;;IAC5F,uEAA6C;IAAA,uDAAyC;;IAAA,4DAAO;;IAAhD,0DAAyC;IAAzC,yJAAyC;;;IAFxF,4EAAuH;IACrH,sHAAmG;IACnG,sHAA6F;IAC/F,4DAAQ;;;IAFC,0DAAoC;IAApC,uIAAoC;IACpC,0DAAoC;IAApC,uIAAoC;;;IA4B3C,uEAAoD;IAAA,uDAAsD;;IAAA,4DAAO;;IAA7D,0DAAsD;IAAtD,sKAAsD;;;IAC1G,uEAAoD;IAAA,uDAAyC;;IAAA,4DAAO;;IAAhD,0DAAyC;IAAzC,yJAAyC;;;IAN/F,4EAIC;IACC,sHAAiH;IACjH,sHAAoG;IACtG,4DAAQ;;;IAFC,0DAA2C;IAA3C,qJAA2C;IAC3C,0DAA2C;IAA3C,qJAA2C;;ADlDjD,MAAM,cAAc;IAMzB,YACU,GAAgB,EAChB,YAAyB,EACzB,eAAiC,EACjC,MAAsB,EACtB,OAAe;QAJf,QAAG,GAAH,GAAG,CAAa;QAChB,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QATzB,iBAAY,GAAG,KAAK,CAAC;QACrB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,eAAU,GAAG,EAAE,CAAC;QASd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAyB,CAAC,CAAC;YAChE,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAyB,CAAC,CAAC;SACxE,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,WAAmB;QACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,UAAU,CAAC,QAAQ,KAAK,UAAU,CAAC,eAAe,EAAE;gBACtD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;aACtG;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,aAAa,iCAC1B,UAAU,KACb,KAAK,EAAE,IAAI,CAAC,UAAU,IACtB,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;SACtG;IACH,CAAC;;4EApDU,cAAc;4GAAd,cAAc;QCV3B,0EAAkE;QAAxB,0IAAY,cAAU,IAAC;QAC/D,wEAAsB;QAAA,uDAA+B;;QAAA,4DAAK;QAC1D,yEAAqE;QACnE,kEAAiD;QACjD,sEAAK;QACH,wEAAyB;QAAA,iFAAsB;QAAA,4DAAK;QACpD,uEAAuB;QAAA,wGAA4C;QAAA,4DAAI;QACzE,4DAAM;QACR,4DAAM;QACN,0EAAuB;QACrB,4EAAyC;QAAA,wDAAsC;;QAAA,4DAAQ;QACvF,0EAA2B;QACzB,4EAYE;QAXA,oIAAQ,WAAO,UAAU,CAAC,IAAC;;QAD7B,4DAYE;QACF,8EAA6G;QAAlE,+KAAsC;QAC/E,oEAAsE;QACxE,4DAAS;QACX,4DAAM;QACN,iHAGQ;QACV,4DAAM;QACN,0EAAuB;QACrB,6EAAgD;QAAA,wDAA6C;;QAAA,4DAAQ;QACrG,0EAA2B;QACzB,6EAYE;QAXA,oIAAQ,WAAO,iBAAiB,CAAC,IAAC;;QADpC,4DAYE;QACF,8EAA2H;QAAhF,6LAAoD;QAC7F,oEAA6E;QAC/E,4DAAS;QACX,4DAAM;QACN,iHAOQ;QACV,4DAAM;QACN,uEAAK;QACH,8EAA0F;QACxF,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;;QApED,+EAAkB;QACA,0DAA+B;QAA/B,gJAA+B;QASV,2DAAsC;QAAtC,wJAAsC;QAO3E,0DAAoD;QAApD,2KAAoD;QAGpD,0FAA6B;QAMd,0DAAkD;QAAlD,sGAAkD;QAG7D,0DAAiE;QAAjE,sOAAiE;QAMzB,0DAA6C;QAA7C,+JAA6C;QAOzF,0DAA2D;QAA3D,kLAA2D;QAG3D,iGAAoC;QAMrB,0DAAyD;QAAzD,6GAAyD;QAIzE,0DAAsF;QAAtF,gRAAsF;QAUvF,0DACF;QADE,oKACF;;;;;;;;;;;;;;;;;;;;;AC9DsE;;;;;AAOnE,MAAM,uBAAuB;IAClC,YACU,MAAsB,EACtB,OAAe,EACf,oBAAyC,EACzC,iBAAmC;QAHnC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAkB;IAC1C,CAAC;IAEJ,0CAA0C;IAC1C,QAAQ;QACN,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEpD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SACrD;aAAM;YACL,6BAA6B;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;SAC3C;IACH,CAAC;IAEO,eAAe,CAAC,IAAoB;QAC1C,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,qDAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpE,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;QAE3E,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iEAA0B,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;;8FA3BU,uBAAuB;qHAAvB,uBAAuB;QCXpC,yEAAwB;QACtB,wEAAqB;QAEnB,uDACF;;QAAA,4DAAK;QACP,4DAAM;;QAFF,0DACF;QADE,wKACF;;;;;;;;;;;;;;;;;;;;;ACFwE;;;;;AASnE,MAAM,sBAAsB;IACjC,YACU,MAAsB,EACtB,OAAe,EACf,oBAAyC,EACzC,iBAAmC;QAHnC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAkB;IAC1C,CAAC;IAEJ,0CAA0C;IAC1C,QAAQ;QACN,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEpD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SACpD;aAAM;YACL,6BAA6B;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;SAC3C;IACH,CAAC;IAEO,eAAe,CAAC,IAAoB;QAC1C,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,qDAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpE,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;QAE3E,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iEAA0B,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;;4FA3BU,sBAAsB;oHAAtB,sBAAsB;QCXnC,yEAAwB;QACtB,wEAAqB;QAEnB,uDACF;;QAAA,4DAAK;QACP,4DAAM;;QAFF,0DACF;QADE,wKACF;;;;;;;;;;;;;;;;;;;;;;ACGK,MAAM,qBAAqB;;0FAArB,qBAAqB;mHAArB,qBAAqB;QCPlC,yEAAiG;QAC/F,oEAAoG;QACpG,0EAA4B;QAC1B,mEAEK;QACL,2EAA+B;QACjC,4DAAO;QACP,yEAA8B;QAC5B,uEAAM;QAAA,qEAAU;QAAA,4DAAO;QACvB,oEAAqF;QACvF,4DAAM;QACR,4DAAM;QACN,qFAAmD;;;;;;;;;;;;;;;;ACbnD,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,mCAAiB;IACjB,uCAAqB;AACvB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFsD;AAEf;AAEkE;AACvB;AACG;AACH;AACwC;AACd;AACG;AACG;AACQ;AACG;AACvE;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,uEAA0B;QAChC,SAAS,EAAE,oHAAqB;QAChC,WAAW,EAAE,CAAC,kDAAW,CAAC;QAC1B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,uEAA0B;gBAChC,SAAS,EAAE,6FAAc;aAC1B;YACD;gBACE,IAAI,EAAE,iFAAoC;gBAC1C,SAAS,EAAE,gGAAe;aAC3B;YACD;gBACE,IAAI,EAAE,gFAAmC;gBACzC,SAAS,EAAE,6FAAc;aAC1B;YACD;gBACE,IAAI,EAAE,0EAA6B;gBACnC,SAAS,EAAE,qIAA0B;aACtC;YACD;gBACE,IAAI,EAAE,sFAAyC;gBAC/C,SAAS,EAAE,yIAA2B;aACvC;YACD;gBACE,IAAI,EAAE,qFAAwC;gBAC9C,SAAS,EAAE,qIAA0B;aACtC;YACD;gBACE,IAAI,EAAE,yFAA4C;gBAClD,SAAS,EAAE,uHAAsB;aAClC;YACD;gBACE,IAAI,EAAE,0FAA6C;gBACnD,SAAS,EAAE,0HAAuB;aACnC;YACD;gBACE,IAAI,EAAE,kFAAqC;gBAC3C,SAAS,EAAE,6HAAwB;aACpC;SACF;KACF;CACF,CAAC;AAMK,MAAM,mBAAmB;;sFAAnB,mBAAmB;iHAAnB,mBAAmB;qHAHrB,CAAC,mEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,0DAAY;oIAEX,mBAAmB,qFAFpB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEuB;AACM;AAEE;AAE4B;AACA;AACG;AACoB;AACA;AACA;AACiB;AACG;AACH;AACR;AACN;AACG;AAClD;AACN;AACe;;AAoBhE,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;+GAFZ,CAAC,kEAAY,EAAE,iFAAmB,CAAC,YADrC,CAAC,0DAAY,EAAE,wEAAmB,EAAE,iEAAkB,EAAE,gEAAmB,CAAC;oIAG1E,YAAY,mBAhBrB,6FAAc;QACd,6FAAc;QACd,gGAAe;QACf,oHAAqB;QACrB,oHAAqB;QACrB,oHAAqB;QACrB,qIAA0B;QAC1B,wIAA2B;QAC3B,qIAA0B;QAC1B,8HAAwB;QACxB,wHAAsB;QACtB,2HAAuB,aAEf,0DAAY,EAAE,wEAAmB,EAAE,iEAAkB,EAAE,gEAAmB;;;;;;;;;;;;;;;;;;;;;ACnChD;AACW;AAEmE;;;;AAM7G,MAAM,YAAY;IACvB,YACU,WAAuB,EACvB,YAAyB,EACzB,oBAAyC,EACzC,iBAAmC;QAHnC,gBAAW,GAAX,WAAW,CAAY;QACvB,iBAAY,GAAZ,YAAY,CAAa;QACzB,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAkB;IAC1C,CAAC;IAEJ,sDAAsD;IACtD,WAAW,CAAC,QAA6B;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAsB,EAAE,sBAAsB,EAAE,QAAQ,CAAC,CAAC,IAAI,CACzF,mDAAG,CAAC,CAAC,QAAwB,EAAE,EAAE;YAC/B,cAAc;YACd,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACtC,OAAO;oBACL,cAAc,EAAE,KAAK;oBACrB,SAAS,EAAE,KAAK;oBAChB,QAAQ,EAAE,IAAI;iBACf,CAAC;aACH;YACD,OAAO;gBACL,cAAc,EAAE,KAAK;gBACrB,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC;QACJ,CAAC,CAAC,EACF,0DAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,QAAQ,KAAK,CAAC,MAAM,EAAE;gBACpB,KAAK,GAAG,EAAE,uDAAuD;oBAC/D,MAAM,IAAI,GAAqB;wBAC7B,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa;wBACzC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY;wBACvC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;wBACjC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;wBACrC,QAAQ,EAAE,EAAE;wBACZ,YAAY,EAAE,CAAC;qBAChB,CAAC;oBACF,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC/C,OAAO,wCAAE,CAAC;wBACR,cAAc,EAAE,KAAK;wBACrB,SAAS,EAAE,IAAI;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;gBACL,KAAK,GAAG,EAAE,uDAAuD;oBAC/D,OAAO,wCAAE,CAAC;wBACR,cAAc,EAAE,IAAI;wBACpB,SAAS,EAAE,KAAK;wBAChB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;gBACL,KAAK,GAAG,CAAC,CAAC,yDAAyD;gBACnE;oBACE,4CAA4C;oBAC5C,OAAO,wCAAE,CAAC;wBACR,cAAc,EAAE,KAAK;wBACrB,SAAS,EAAE,KAAK;wBAChB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,qEAAqE;IACrE,YAAY,CAAC,YAA2B;QACtC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAsB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC,IAAI,CAC1F,mDAAG,CAAC,CAAC,QAAwB,EAAE,EAAE;YAC/B,cAAc;YACd,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACtC,OAAO,SAAS,CAAC;aAClB;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,EACF,0DAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,2FAA2F;YAC3F,qCAAqC;YACrC,QAAQ,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE;gBAC9B,KAAK,GAAG,EAAE,uDAAuD;oBAC/D,MAAM,IAAI,GAAqB;wBAC7B,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa;wBACzC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY;wBACvC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;wBACjC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;wBACrC,QAAQ,EAAE,EAAE;wBACZ,YAAY,EAAE,CAAC;qBAChB,CAAC;oBACF,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC/C,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAK,GAAG,EAAE,8CAA8C;oBACtD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;oBACvG,OAAO,wCAAE,CAAC,KAAK,CAAC,CAAC;gBACnB;oBACE,yCAAyC;oBACzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,OAAO,wCAAE,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,yBAAyB,EAAE,2BAA2B,CAAC,CAAC;IACvF,CAAC;;wEAxGU,YAAY;6GAAZ,YAAY,WAAZ,YAAY;;;;;;;;;;;;;;;;;;;;;ACX2D;AAI7C;AAKgD;;;;;AAIvF,MAAM,YAAY,GAAG;IACnB,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,EAAE;IACZ,KAAK,EAAE,EAAE;IACT,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,IAAI;IACd,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAC/B,YAAY,EAAE,CAAC;CAChB,CAAC;AAGK,MAAM,mBAAmB;IAO9B,YACU,WAAuB,EACvB,iBAAmC,EACnC,OAAe,EACf,iBAAmC;QAHnC,gBAAW,GAAX,WAAW,CAAY;QACvB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QAV7C,2BAAsB,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAC7D,wBAAmB,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAC1D,sBAAiB,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAEhD,oBAAe,qBAA0B,YAAY,EAAG;IAO7D,CAAC;IAEJ,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,qBAAqB;IACrB,gBAAgB,CAAC,UAA2B;QAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC;IACzC,CAAC;IAED,kCAAkC;IAClC,iBAAiB;QACf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,qBAAQ,YAAY,CAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;IAC5C,CAAC;IAED,oBAAoB;IACpB,cAAc,CAAC,QAA0B;QACvC,IAAI,CAAC,eAAe,mCACf,IAAI,CAAC,IAAI,GACT,QAAQ,CACZ,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;IAED,gCAAgC;IAChC,oBAAoB,CAAC,UAAsB;QACzC,IAAI,CAAC,eAAe,mCACf,IAAI,CAAC,eAAe,KACvB,SAAS,EAAE,UAAU,CAAC,SAAS,EAC/B,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAC7B,KAAK,EAAE,UAAU,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAC7B,QAAQ,EAAE,UAAU,CAAC,OAAO,GAC7B,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAE/D,4GAA4G;QAC5G,IAAI,CAAC,OAAO,CAAC,QAAQ,CACnB,6EAA6B,CAC3B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,qFAAyC,CAAC,CAAC,CAAC,yEAA6B,CAC9G,CACF,CAAC;IACJ,CAAC;IAED,0BAA0B;IAC1B,YAAY;QACV,MAAM,OAAO,GAAyB;YACpC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACtB,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;YACpC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW;SAC7C,CAAC;QAEF,IAAI,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAClC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC;SAC/D;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAsB,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC,SAAS,CAC9E,GAAG,EAAE;YACH,yBAAyB;YACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,oFAAwC,CAAC,CAAC,CAAC;aAChG;iBAAM;gBACL,0BAA0B;gBAC1B,yEAAyE;gBACzE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,iFAAqC,CAAC,CAAC,CAAC;aAC7F;QACH,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;QACzG,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mBAAmB;IACnB,cAAc,CAAC,aAAqC;QAClD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,6DAAsB,EAAE,2BAA2B,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CACtG,CAAC,QAAiC,EAAE,EAAE;YACpC,IAAI,CAAC,eAAe,mCACf,YAAY,KACf,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,EACrC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EACnC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,EAC7B,oBAAoB,EAAE,aAAa,CAAC,KAAK,GAC1C,CAAC;YACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,yEAA6B,CAAC,CAAC,CAAC;QACtF,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;YACvG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;QAC5C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6BAA6B;IAC7B,aAAa,CAAC,eAAsC;QAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAsB,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC,SAAS,CACzF,CAAC,QAAgC,EAAE,EAAE;YACnC,IAAI,CAAC,eAAe,mCACf,YAAY,KACf,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,EACrC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EACnC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,EAC7B,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,GACtC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,iFAAqC,CAAC,CAAC,CAAC;QAC9F,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;YACvG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,yDAAkB,CAAC,CAAC;QAC5C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0BAA0B;IAC1B,kBAAkB;QAChB,MAAM,OAAO,GAAyB;YACpC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACtB,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;YACpC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW;YAC5C,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;SAChC,CAAC;QAEF,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAsB,EAAE,qBAAqB,EAAE,OAAO,CAAC,CAAC,SAAS,CAC5F,GAAG,EAAE;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6B,CAAC,iFAAqC,CAAC,CAAC,CAAC;QAC9F,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,EAAE,oCAAoC,CAAC,CAAC;QACzG,CAAC,CACF,CAAC;IACJ,CAAC;;sFA/JU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB","sources":["./projects/scouting-portal/src/app/public/components/public-layout/components/forgot/forgot.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/forgot/forgot.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/google-button/google-button.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/google-button/google-button.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/login/login.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/login/login.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/public-footer/public-footer.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/public-footer/public-footer.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/register-first-step/register-first-step.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/register-first-step/register-first-step.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/register-payment/register-payment.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/register-payment/register-payment.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/register-second-step/register-second-step.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/register-second-step/register-second-step.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/register-third-step/register-third-step.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/register-third-step/register-third-step.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/reset/reset.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/reset/reset.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/validate-invite/validate-invite.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/validate-invite/validate-invite.component.html","./projects/scouting-portal/src/app/public/components/public-layout/components/validate-token/validate-token.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/components/validate-token/validate-token.component.html","./projects/scouting-portal/src/app/public/components/public-layout/public-layout.component.ts","./projects/scouting-portal/src/app/public/components/public-layout/public-layout.component.html","./projects/scouting-portal/src/app/public/enums/provider-types.ts","./projects/scouting-portal/src/app/public/public-routing.module.ts","./projects/scouting-portal/src/app/public/public.module.ts","./projects/scouting-portal/src/app/public/services/login.service.ts","./projects/scouting-portal/src/app/public/services/register-user.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { AuthService, CustomValidators, MessagingService } from '@aft-core';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../../../../public.routes';\r\n\r\n@Component({\r\n  selector: 'aft-scout-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss'],\r\n})\r\nexport class ForgotComponent {\r\n  form: FormGroup;\r\n  showPassword = false;\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    private _authService: AuthService,\r\n    private _translateService: TranslateService,\r\n    private _messagingService: MessagingService\r\n  ) {\r\n    this.form = this._fb.group({\r\n      email: ['', [Validators.required, CustomValidators.Email]],\r\n    });\r\n  }\r\n\r\n  get emailCtrl() {\r\n    return this.form.controls.email;\r\n  }\r\n\r\n  onBlur(controlName: string) {\r\n    this.form.get(controlName)?.markAsDirty();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const formValues = this.form.value;\r\n      this._authService.sendForgotEmail({ email: formValues.email, language: this._translateService.currentLang });\r\n    } else {\r\n      this._messagingService.info('FORGOT.TOAST.INFO.TITLE', 'FORGOT.TOAST.INFO.MESSAGE');\r\n    }\r\n  }\r\n\r\n  goToLogin() {\r\n    this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.LOGIN));\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" class=\"cardBody\" (ngSubmit)=\"onSubmit()\">\r\n  <h2 class=\"cardTitle\">{{ 'FORGOT.TITLE' | translate }}</h2>\r\n  <small>{{ 'FORGOT.INFO_MESSAGE' | translate }}</small>\r\n  <div class=\"alert alert_danger marginBottom_2\" style=\"display: none\">\r\n    <i class=\"mdi mdi-close-octagon alert__icon\"></i>\r\n    <div>\r\n      <h3 class=\"alert__title\">Invalid email</h3>\r\n      <p class=\"alert__text\">Please check your credentials and try again.</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"inputCont marginTop_1\">\r\n    <label for=\"forgotEmail\" class=\"label\">{{ 'FORGOT.EMAIL' | translate }}</label>\r\n    <input\r\n      (blur)=\"onBlur('email')\"\r\n      type=\"email\"\r\n      id=\"forgotEmail\"\r\n      formControlName=\"email\"\r\n      placeholder=\"{{ 'FORGOT.EXAMPLE' | translate }}\"\r\n      class=\"input\"\r\n      aria-describedby=\"loginEmail_errorMsg\"\r\n      pInputText\r\n      [maxLength]=\"75\"\r\n    />\r\n    <small *ngIf=\"emailCtrl?.invalid && (emailCtrl?.dirty || emailCtrl?.touched)\" id=\"loginEmail_errorMsg\" class=\"p-error\">\r\n      <span *ngIf=\"emailCtrl?.hasError('required')\">{{ 'FORGOT.EMAIL_REQUIRED' | translate }}</span>\r\n      <span *ngIf=\"emailCtrl?.hasError('Email')\">{{ 'FORGOT.EMAIL_WRONG_FORMAT' | translate }}</span>\r\n    </small>\r\n  </div>\r\n  <div>\r\n    <button id=\"submitBtn\" name=\"submit\" type=\"submit\" class=\"button button_big button_block\">\r\n      {{ 'FORGOT.SEND_EMAIL' | translate }}\r\n    </button>\r\n  </div>\r\n  <div class=\"forgotFoot\">\r\n    <button type=\"button\" class=\"button button_link margin_auto\" (click)=\"goToLogin()\">\r\n      {{ 'FORGOT.LOGIN' | translate }}\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { GoogleLoginProvider, SocialAuthService, SocialUser } from 'angularx-social-login';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService, MessagingService } from '@aft-core';\r\n\r\nimport { RegisterUserService } from '@scouting-public/services/register-user.service';\r\nimport { LoginService } from '@scouting-public/services/login.service';\r\nimport { IGoogleLoginRequest, IGoogleSignInResponse } from '@scouting-public/interfaces/google';\r\nimport { PROVIDER_TYPES } from '@scouting-public/enums/provider-types';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '@scouting-public/public.routes';\r\n\r\n@Component({\r\n  selector: 'aft-scout-google-button',\r\n  templateUrl: './google-button.component.html',\r\n  styleUrls: ['./google-button.component.scss'],\r\n})\r\nexport class GoogleButtonComponent {\r\n  @Input() register = false;\r\n  @Input() disabled = false;\r\n\r\n  private _user: SocialUser = new SocialUser();\r\n\r\n  constructor(\r\n    private _socialAuthService: SocialAuthService,\r\n    private _registerUserService: RegisterUserService,\r\n    private _loginService: LoginService,\r\n    private _router: Router,\r\n    private _messagingService: MessagingService,\r\n    private _authService: AuthService\r\n  ) {}\r\n\r\n  // Logs with google, checks if user exists and logs user in or redirects to register\r\n  async signInWithGoogle() {\r\n    if (!this.disabled) {\r\n      this._user = await this._socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n      // User logged in to google, log in into system\r\n      const body: IGoogleLoginRequest = {\r\n        email: this._user.email,\r\n        providerId: this._user.id,\r\n        provider: PROVIDER_TYPES.GOOGLE,\r\n      };\r\n\r\n      this._loginService.googleLogin(body).subscribe((result: IGoogleSignInResponse) => {\r\n        if (this.register && result.shouldRegister) {\r\n          // Accessed from register page, force to ask for profession\r\n          if (!this._registerUserService.user.professionId) {\r\n            this._messagingService.info(\r\n              'REGISTER.FIRST_STEP.TOAST.REGISTER_REQUIRED.TITLE',\r\n              'REGISTER.FIRST_STEP.TOAST.REGISTER_REQUIRED.MESSAGE'\r\n            );\r\n          }\r\n\r\n          this._registerUserService.updateGoogleUserInfo(this._user);\r\n        } else if (result.shouldRegister) {\r\n          // Accessed from login, user not registered, redirect to step 1\r\n          this._messagingService.info(\r\n            'REGISTER.FIRST_STEP.TOAST.REGISTER_REQUIRED.TITLE',\r\n            'REGISTER.FIRST_STEP.TOAST.REGISTER_REQUIRED.MESSAGE'\r\n          );\r\n          this._registerUserService.updateGoogleUserInfo(this._user);\r\n          this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER));\r\n        } else if (result.shouldPay) {\r\n          this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT));\r\n        } else if (!this._authService.isLoggedIn$.value) {\r\n          this._messagingService.error('GOOGLE.ERROR.REGISTER.TITLE', 'GOOGLE.ERROR.REGISTER.MESSAGE');\r\n        }\r\n      });\r\n    } else {\r\n      this._messagingService.info('REGISTER.FIRST_STEP.TOAST.INFO.TITLE', 'REGISTER.FIRST_STEP.TOAST.INFO.MESSAGE');\r\n    }\r\n  }\r\n}\r\n","<button\r\n  name=\"googleRegister\"\r\n  type=\"button\"\r\n  class=\"button button_outline button_big_icon button_block\"\r\n  (click)=\"signInWithGoogle()\"\r\n>\r\n  <img src=\"assets/images/icons/buscar.svg\" class=\"btn_icon_svg\" alt=\"google_icon\" width=\"17px\" />\r\n\r\n  <ng-container *ngIf=\"register\">\r\n    {{ 'GOOGLE.REGISTER' | translate }}\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!register\">\r\n    {{ 'GOOGLE.LOGIN' | translate }}\r\n  </ng-container>\r\n</button>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService, CustomValidators, ILoginRequest, MessagingService, PaymentService } from '@aft-core';\r\nimport { LoginService } from '@scouting/public/services/login.service';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../../../../public.routes';\r\n\r\n@Component({\r\n  selector: 'aft-scout-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  form: FormGroup;\r\n  showPassword = false;\r\n  showResetPasswordMessage = false;\r\n  showPaymentMessage = false;\r\n  private _subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    private _authService: AuthService,\r\n    private _messagingService: MessagingService,\r\n    private _paymentService: PaymentService,\r\n    private _loginService: LoginService\r\n  ) {\r\n    this.form = this._fb.group({\r\n      email: ['', [Validators.required, CustomValidators.Email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._subscriptions.push(\r\n      this._paymentService.paymentSuccessful$.subscribe((paymentSuccessful: boolean | undefined) => {\r\n        if (paymentSuccessful) {\r\n          this.showPaymentMessage = paymentSuccessful;\r\n        }\r\n      }),\r\n      this._authService.hasChangedPassword$.subscribe(show => {\r\n        this.showResetPasswordMessage = show;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  get emailCtrl() {\r\n    return this.form.controls.email;\r\n  }\r\n\r\n  get passCtrl() {\r\n    return this.form.controls.password;\r\n  }\r\n\r\n  onBlur() {\r\n    this.form.controls.email.markAsDirty();\r\n    this.form.controls.password.markAsDirty();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loginUser(this.form.value);\r\n    } else if (this.form.pristine) {\r\n      this._messagingService.error('LOGIN.TOAST.EMPTY.TITLE', 'LOGIN.TOAST.EMPTY.MESSAGE');\r\n    } else {\r\n      this._messagingService.info('LOGIN.TOAST.INFO.TITLE', 'LOGIN.TOAST.INFO.MESSAGE');\r\n    }\r\n  }\r\n\r\n  loginUser(loginRequest: ILoginRequest) {\r\n    // Tries to login, checks if user exists and if it has pending payment then it redirects to payment, else it redirects to home\r\n    this._loginService.checkPayment(loginRequest).subscribe((shouldPay: boolean | undefined) => {\r\n      if (shouldPay) {\r\n        this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT));\r\n      }\r\n    });\r\n  }\r\n\r\n  goToForgot() {\r\n    this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.FORGOT_PASSWORD));\r\n  }\r\n\r\n  goToRegister() {\r\n    this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER));\r\n  }\r\n}\r\n","<div class=\"card_small\">\r\n  <form [formGroup]=\"form\" class=\"cardBody\" (ngSubmit)=\"onSubmit()\">\r\n    <h2 class=\"cardTitle\">{{ 'LOGIN.TITLE' | translate }}</h2>\r\n    <div class=\"alert alert_danger marginBottom_2\" style=\"display: none\">\r\n      <i class=\"mdi mdi-close-octagon alert__icon\"></i>\r\n      <div>\r\n        <h3 class=\"alert__title\">Invalid email/password</h3>\r\n        <p class=\"alert__text\">Please check your credentials and try again.</p>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"showResetPasswordMessage\" class=\"alert alert-success\">\r\n      <i class=\"mdi mdi-check-circle alert__icon alert_succes_color marginTop_1\"></i>\r\n      <div>\r\n        <h3 class=\"alert__title alert_succes_color marginTop_1\">{{ 'LOGIN.PASSWORD_CHANGED_TITLE' | translate }}</h3>\r\n        <p class=\"alert__text alert_succes_color marginBottom_1\">{{ 'LOGIN.PASSWORD_CHANGED_TEXT' | translate }}</p>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"showPaymentMessage\" class=\"alert alert-success\">\r\n      <i class=\"mdi mdi-check-circle alert__icon alert_succes_color marginTop_1\"></i>\r\n      <div>\r\n        <h3 class=\"alert__title alert_succes_color marginTop_1\">{{ 'LOGIN.PAYMENT_OK' | translate }}</h3>\r\n        <p class=\"alert__text alert_succes_color marginBottom_1\">{{ 'LOGIN.PAYMENT_OK_TEXT' | translate }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"inputCont\">\r\n      <label for=\"loginEmail\" class=\"label\">{{ 'LOGIN.EMAIL' | translate }}</label>\r\n      <input\r\n        (blur)=\"onBlur()\"\r\n        type=\"email\"\r\n        id=\"loginEmail\"\r\n        formControlName=\"email\"\r\n        placeholder=\"{{ 'LOGIN.EXAMPLE' | translate }}\"\r\n        class=\"input\"\r\n        aria-describedby=\"loginEmail_errorMsg\"\r\n        pInputText\r\n        [maxLength]=\"75\"\r\n      />\r\n      <small *ngIf=\"emailCtrl?.invalid && (emailCtrl?.dirty || emailCtrl?.touched)\" id=\"loginEmail_errorMsg\" class=\"p-error\">\r\n        <span *ngIf=\"emailCtrl?.hasError('required')\">{{ 'LOGIN.EMAIL_REQUIRED' | translate }}</span>\r\n        <span *ngIf=\"emailCtrl?.hasError('Email')\">{{ 'LOGIN.EMAIL_WRONG_FORMAT' | translate }}</span>\r\n      </small>\r\n    </div>\r\n    <div class=\"inputCont\">\r\n      <label for=\"loginPassword\" class=\"label\">{{ 'LOGIN.PASSWORD' | translate }}</label>\r\n      <div class=\"inputIconCont\">\r\n        <input\r\n          (blur)=\"onBlur()\"\r\n          formControlName=\"password\"\r\n          type=\"password\"\r\n          pPassword\r\n          placeholder=\"{{ 'LOGIN.PASSWORD' | translate }}\"\r\n          id=\"loginPassword\"\r\n          class=\"inputIconField\"\r\n          [showPassword]=\"showPassword\"\r\n          [feedback]=\"false\"\r\n          aria-describedby=\"loginPassword_errorMsg\"\r\n          [maxLength]=\"50\"\r\n        />\r\n        <button type=\"button\" class=\"inputIconBtn\" (click)=\"showPassword = !showPassword\" title=\"Show/hide password\">\r\n          <i class=\"mdi\" [class]=\"showPassword ? 'mdi-eye-off' : 'mdi-eye'\"></i>\r\n        </button>\r\n      </div>\r\n      <small *ngIf=\"passCtrl?.invalid && (passCtrl?.dirty || passCtrl?.touched)\" id=\"loginPassword_errorMsg\" class=\"p-error\">\r\n        <span *ngIf=\"passCtrl?.hasError('required')\">{{ 'LOGIN.PASSWORD_REQUIRED' | translate }}</span>\r\n        <span *ngIf=\"passCtrl?.hasError('pattern')\">{{ 'LOGIN.PASSWORD_FORMAT' | translate }}</span>\r\n      </small>\r\n    </div>\r\n    <button name=\"goToForgot\" (click)=\"goToForgot()\" class=\"button button_link marginLeft_auto\" type=\"button\">\r\n      {{ 'LOGIN.FORGOT_PASSWORD' | translate }}\r\n    </button>\r\n    <div>\r\n      <button name=\"submit\" type=\"submit\" class=\"button button_big button_block\">\r\n        {{ 'LOGIN.SUBMIT_BUTTON' | translate }}\r\n      </button>\r\n      <div>\r\n        <div class=\"separator\">or</div>\r\n        <aft-scout-google-button></aft-scout-google-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"loginFoot\">\r\n      <button name=\"goToRegister\" (click)=\"goToRegister()\" class=\"button button_link margin_auto\" type=\"button\">\r\n        {{ 'LOGIN.REGISTER' | translate }}\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { LANGUAGES_ENUM, STORAGE_KEYS_ENUM } from '@aft-core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'aft-scout-public-footer',\r\n  templateUrl: './public-footer.component.html',\r\n  styleUrls: ['./public-footer.component.scss'],\r\n})\r\nexport class PublicFooterComponent {\r\n  LANGUAGES_ENUM = LANGUAGES_ENUM;\r\n\r\n  constructor(private _translateService: TranslateService) {}\r\n\r\n  changeLanguage(lang: string) {\r\n    window.localStorage.setItem(STORAGE_KEYS_ENUM.LANGUAGE, lang);\r\n    this._translateService.use(lang);\r\n  }\r\n}\r\n","<footer class=\"footer_public\">\r\n  <div>\r\n    <nav>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.PRIVATE' | translate }}</button>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.ABOUT_US' | translate }}</button>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.TERMS' | translate }}</button>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.PRIVACY' | translate }}</button>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.HELP' | translate }}</button>\r\n      <!-- <button class=\"footerBtn\">{{ 'FOOTER.STATUS' | translate }}</button>\r\n      <button class=\"footerBtn\">{{ 'FOOTER.CONTACT' | translate }}</button> -->\r\n    </nav>\r\n  </div>\r\n  <div>\r\n    <nav>\r\n      <button class=\"footerBtn\" (click)=\"changeLanguage(LANGUAGES_ENUM.ES)\">{{ 'LANGUAGES.ES' | translate }}</button>\r\n      <button class=\"footerBtn\" (click)=\"changeLanguage(LANGUAGES_ENUM.EN)\">{{ 'LANGUAGES.EN' | translate }}</button>\r\n    </nav>\r\n  </div>\r\n  <div>\r\n    <small class=\"footerCopyright\">{{ 'FOOTER.COPYRIGHT' | translate }}</small>\r\n  </div>\r\n</footer>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from 'angularx-social-login';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessagingService, CustomValidators, AuthService, FormUtils, USER_PROFESSIONS } from '@aft-core';\r\n\r\nimport { RegisterUserService } from '../../../../services/register-user.service';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../../../../public.routes';\r\n\r\n@Component({\r\n  selector: 'aft-scout-register-first-step',\r\n  templateUrl: './register-first-step.component.html',\r\n  styleUrls: ['./register-first-step.component.scss'],\r\n})\r\nexport class RegisterFirstStepComponent implements OnInit, OnDestroy {\r\n  form: FormGroup;\r\n  private subscriptions = new Subscription();\r\n\r\n  isPlatformRegister: boolean = false;\r\n  isInviteRegister: boolean = false;\r\n\r\n  professions = USER_PROFESSIONS;\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    private _messagingService: MessagingService,\r\n    private _registerUserService: RegisterUserService,\r\n    private _authService: AuthService,\r\n    private _socialAuthService: SocialAuthService\r\n  ) {\r\n    this.form = this._fb.group({\r\n      selectedProfession: [this._registerUserService.user.profession, [Validators.required, CustomValidators.EmptyDropdown]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions.add(\r\n      this._registerUserService.isPlatformRegister$.subscribe((val: boolean) => (this.isPlatformRegister = val))\r\n    );\r\n    this.subscriptions.add(\r\n      this._registerUserService.isInviteRegister$.subscribe((val: boolean) => (this.isInviteRegister = val))\r\n    );\r\n\r\n    this.form.controls.selectedProfession.setValue(this._registerUserService.user.profession);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  onClickDropdown(): void {\r\n    this._registerUserService.changeProfession(this.form.value.selectedProfession);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_SECOND_STEP));\r\n    } else {\r\n      FormUtils.SubmitAllControls(this.form);\r\n      this._messagingService.info('REGISTER.FIRST_STEP.TOAST.INFO.TITLE', 'REGISTER.FIRST_STEP.TOAST.INFO.MESSAGE');\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    if (this.isPlatformRegister) {\r\n      this._socialAuthService.signOut();\r\n    }\r\n    this._registerUserService.resetRegistration();\r\n  }\r\n}\r\n","<div class=\"card_small\">\r\n  <h1 class=\"cardHead\">\r\n    <!-- <img src=\"\" alt=\"TheRealScout_logo\" class=\"authCardLogo\" /> -->\r\n    {{ 'REGISTER.FIRST_STEP.TITLE' | translate }}\r\n  </h1>\r\n  <form [formGroup]=\"form\" class=\"cardBody card_small\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"inputCont\">\r\n      <label for=\"loginEmail\" class=\"label\">{{ 'REGISTER.FIRST_STEP.PROFESSION' | translate }}</label>\r\n      <p-dropdown\r\n        (click)=\"onClickDropdown()\"\r\n        [options]=\"professions\"\r\n        formControlName=\"selectedProfession\"\r\n        optionLabel=\"name\"\r\n        placeholder=\"{{ 'REGISTER.FIRST_STEP.SELECT_PROFESSION' | translate }}\"\r\n      >\r\n        <ng-template let-item pTemplate=\"item\">\r\n          {{ item.name | translate }}\r\n        </ng-template>\r\n        <ng-template let-selectedItem pTemplate=\"selectedItem\">\r\n          {{ selectedItem.name | translate }}\r\n        </ng-template>\r\n      </p-dropdown>\r\n    </div>\r\n    <div>\r\n      <button name=\"submit\" type=\"submit\" class=\"button button_big button_block\">\r\n        {{ 'REGISTER.FIRST_STEP.CONTINUE' | translate }}\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <ng-container *ngIf=\"!isPlatformRegister && !isInviteRegister\">\r\n        <div class=\"separator\">or</div>\r\n        <aft-scout-google-button [register]=\"true\"></aft-scout-google-button>\r\n        <button name=\"submit\" type=\"submit\" class=\"button button_outline button_big_icon button_block marginTop_1\" disabled>\r\n          <img src=\"assets/images/icons/linkedin.svg\" class=\"btn_icon_svg\" alt=\"google_icon\" width=\"17px\" />\r\n          {{ 'REGISTER.FIRST_STEP.CONTINUE_LINKEDIN' | translate }}\r\n        </button>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"loginFoot\">\r\n      <button name=\"goBack\" (click)=\"goBack()\" class=\"button button_link margin_auto\" type=\"button\">\r\n        {{ 'REGISTER.FIRST_STEP.GO_BACK' | translate }}\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AppConfigService, APP_ROUTES, MessagingService, PaymentService } from '@aft-core';\r\nimport { IRegisteringUser } from '@scouting-public/interfaces/register';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../../../../public.routes';\r\nimport { RegisterUserService } from '../../../../services/register-user.service';\r\n\r\n@Component({\r\n  selector: 'aft-scout-register-fourth-step',\r\n  templateUrl: './register-payment.component.html',\r\n  styleUrls: ['./register-payment.component.scss'],\r\n})\r\nexport class RegisterPaymentComponent implements OnInit, OnDestroy {\r\n  user: IRegisteringUser;\r\n  amountValue: string;\r\n  isInvite: boolean;\r\n  private _subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _registerUserService: RegisterUserService,\r\n    private _configService: AppConfigService,\r\n    private _paymentService: PaymentService,\r\n    private _messagingService: MessagingService\r\n  ) {\r\n    this.user = this._registerUserService.user;\r\n    this.isInvite = this._registerUserService.isInviteRegister$.value;\r\n    this.amountValue = this._configService.envConfig.paypalAmount || '5000';\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.user.firstName === '' || this.user.email === '' || this.user.lastName === '') {\r\n      this._router.navigate(APP_ROUTES.LANDING);\r\n    }\r\n\r\n    this._subscriptions.push(\r\n      this._paymentService.paymentSuccessful$.subscribe((paymentSuccessful: boolean | undefined) => {\r\n        if (paymentSuccessful !== undefined) {\r\n          if (paymentSuccessful) {\r\n            this.confirmPayment();\r\n          } else {\r\n            this._messagingService.error('REGISTER.FOURTH_STEP.TOAST.ERROR.TITLE', 'REGISTER.FOURTH_STEP.TOAST.ERROR.MESSAGE');\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  confirmPayment(): void {\r\n    this._registerUserService.resetRegistration();\r\n    this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.LOGIN));\r\n  }\r\n\r\n  confirmInvite(): void {\r\n    this._registerUserService.resetRegistration();\r\n    this._router.navigate(APP_ROUTES.LANDING);\r\n  }\r\n}\r\n","<div class=\"authCard\">\r\n  <div class=\"card_large container_fluid\">\r\n    <h2 class=\"cardHead\">{{ 'REGISTER.FOURTH_STEP.TITLE' | translate }}</h2>\r\n    <p *ngIf=\"!isInvite\" class=\"cardSubtitle\">{{ 'REGISTER.FOURTH_STEP.SUBTITLE' | translate }}</p>\r\n    <div class=\"row reset_space margin_2\">\r\n      <div class=\"col_12 col_lg_6 paddingLeft_0\">\r\n        <div class=\"row reset_space col_12 margin_1\">\r\n          <p class=\"label\">{{ 'REGISTER.FOURTH_STEP.NAME' | translate }}</p>\r\n          <p class=\"base_text\">{{ user.firstName }}</p>\r\n        </div>\r\n        <div class=\"row reset_space col_12 margin_1\">\r\n          <p class=\"label\">{{ 'REGISTER.FOURTH_STEP.EMAIL' | translate }}</p>\r\n          <p class=\"base_text\">{{ user.email }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 col_lg_6 paddingLeft_0\">\r\n        <div class=\"row reset_space col_12 margin_1\">\r\n          <p class=\"label\">{{ 'REGISTER.FOURTH_STEP.LASTNAME' | translate }}</p>\r\n          <p class=\"base_text\">{{ user.lastName }}</p>\r\n        </div>\r\n        <div class=\"row reset_space col_12 margin_1\">\r\n          <p class=\"label\">{{ 'REGISTER.FOURTH_STEP.PHONE' | translate }}</p>\r\n          <p class=\"base_text\">{{ user.cellphone }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-container *ngIf=\"isInvite\">\r\n      <div class=\"row card_border payment-data padding_2\">\r\n        <div class=\"col_12 col_lg_9 padding_1\">\r\n          <p class=\"base_title\">{{ 'REGISTER.FOURTH_STEP.MEMBERSHIP' | translate }}</p>\r\n          <p class=\"base_text\">{{ 'REGISTER.FOURTH_STEP.PAYMENT_TYPE' | translate }}</p>\r\n        </div>\r\n        <div class=\"col_12 col_lg_3 padding_1\">\r\n          <p class=\"percentaje_text\">100% OFF</p>\r\n          <p class=\"original_price_text\"></p>\r\n          <span class=\"line\">\r\n            <span class=\"original_price_text\">{{ amountValue }} USD</span>\r\n          </span>\r\n          <p class=\"discount_price_text\">0 USD</p>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"!isInvite\">\r\n      <div class=\"row card_border payment-data padding_2\">\r\n        <div class=\"col_12 col_lg_9 padding_1\">\r\n          <p class=\"base_title\">{{ 'REGISTER.FOURTH_STEP.MEMBERSHIP' | translate }}</p>\r\n          <p class=\"base_text\">{{ 'REGISTER.FOURTH_STEP.PAYMENT_TYPE' | translate }}</p>\r\n        </div>\r\n        <div class=\"col_12 col_lg_3 padding_1\">\r\n          <p class=\"base_title bold\">{{ amountValue }} USD</p>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <div>\r\n      <div class=\"loginFoot marginTop_3\">\r\n        <div *ngIf=\"!isInvite\">\r\n          <p class=\"pay_text\">{{ 'REGISTER.FOURTH_STEP.PAY_TITLE' | translate }}</p>\r\n          <div class=\"btn_box\">\r\n            <aft-paypal-component\r\n              *ngIf=\"amountValue && user\"\r\n              [amountValue]=\"amountValue\"\r\n              [userEmail]=\"user.email\"\r\n            ></aft-paypal-component>\r\n          </div>\r\n        </div>\r\n        <button\r\n          id=\"payButton\"\r\n          *ngIf=\"isInvite\"\r\n          name=\"payButton\"\r\n          type=\"button\"\r\n          class=\"button button_big\"\r\n          (click)=\"confirmInvite()\"\r\n        >\r\n          {{ 'REGISTER.FOURTH_STEP.PAY_BUTTON' | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CustomValidators, FormUtils, MessagingService } from '@aft-core';\r\n\r\nimport { RegisterUserService } from '../../../../services/register-user.service';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../../../../public.routes';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'aft-scout-register-second-step',\r\n  templateUrl: './register-second-step.component.html',\r\n  styleUrls: ['./register-second-step.component.scss'],\r\n})\r\nexport class RegisterSecondStepComponent implements OnInit, OnDestroy {\r\n  form: FormGroup;\r\n  private subscriptions = new Subscription();\r\n\r\n  showPassword = false;\r\n  showConfirmPassword = false;\r\n\r\n  isGoogleRegister: boolean;\r\n  isInviteRegister: boolean;\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    private _messagingService: MessagingService,\r\n    private _registerUserService: RegisterUserService\r\n  ) {\r\n    this.isGoogleRegister = !!this._registerUserService.user.googleId;\r\n    this.isInviteRegister = !!this._registerUserService.user.invitationEmailToken;\r\n    const formData = this._registerUserService.user;\r\n\r\n    const passwordValidators = !this.isGoogleRegister ? [Validators.required, CustomValidators.Password] : [];\r\n\r\n    this.form = this._fb.group({\r\n      firstName: [{ value: formData.firstName, disabled: this.isGoogleRegister }, [Validators.required, CustomValidators.Name]],\r\n      lastName: [{ value: formData.lastName, disabled: this.isGoogleRegister }, [Validators.required, CustomValidators.Name]],\r\n      email: [\r\n        { value: formData.email, disabled: this.isGoogleRegister || this.isInviteRegister },\r\n        [Validators.required, CustomValidators.Email],\r\n      ],\r\n      cellphone: [formData.cellphone, [Validators.required, CustomValidators.Cellphone]],\r\n      password: [{ value: formData.password, disabled: this.isGoogleRegister }, passwordValidators],\r\n      confirmPassword: [{ value: '', disabled: this.isGoogleRegister }, passwordValidators],\r\n      agreeOfTerms: [false, Validators.requiredTrue],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Prevents from accessing the page without setting profession Id\r\n    this.subscriptions.add(\r\n      this._registerUserService.confirmationEmailSent$.subscribe(emailSent => {\r\n        if (!this._registerUserService.user.professionId || emailSent) {\r\n          this._registerUserService.resetRegistration();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  get firstNameCtrl() {\r\n    return this.form.controls.firstName;\r\n  }\r\n\r\n  get lastNameCtrl() {\r\n    return this.form.controls.lastName;\r\n  }\r\n\r\n  get emailCtrl() {\r\n    return this.form.controls.email;\r\n  }\r\n\r\n  get cellphoneCtrl() {\r\n    return this.form.controls.cellphone;\r\n  }\r\n\r\n  get passCtrl() {\r\n    return this.form.controls.password;\r\n  }\r\n\r\n  get confirmPassCtrl() {\r\n    return this.form.controls.confirmPassword;\r\n  }\r\n\r\n  saveFields(field: string) {\r\n    this.form.controls[field].markAsDirty();\r\n    this._registerUserService.updateUserInfo({ ...this.form.value });\r\n  }\r\n\r\n  // Register call\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      if (this.isGoogleRegister) {\r\n        this._registerUserService.registerGoogleUser();\r\n      } else if (this.form.value.password === this.form.value.confirmPassword) {\r\n        this._registerUserService.registerUser();\r\n      } else {\r\n        this._messagingService.error('REGISTER.SECOND_STEP.TOAST.ERROR.TITLE', 'REGISTER.SECOND_STEP.TOAST.ERROR.MESSAGE');\r\n      }\r\n    } else {\r\n      FormUtils.SubmitAllControls(this.form);\r\n      this._messagingService.info('REGISTER.SECOND_STEP.TOAST.INFO.TITLE', 'REGISTER.SECOND_STEP.TOAST.INFO.MESSAGE');\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER));\r\n  }\r\n}\r\n","<div class=\"card_large\">\r\n  <h1 class=\"cardHead\">\r\n    <!-- <img src=\"\" alt=\"TheRealScout_logo\" class=\"authCardLogo\" /> -->\r\n    {{ 'REGISTER.SECOND_STEP.TITLE' | translate }}\r\n  </h1>\r\n  <form [formGroup]=\"form\" class=\"cardBody\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row\">\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerFirstName\" class=\"label required_icon\">{{ 'REGISTER.SECOND_STEP.LBL_NAME' | translate }}</label>\r\n          <input\r\n            (blur)=\"saveFields('firstName')\"\r\n            type=\"text\"\r\n            id=\"registerFirstName\"\r\n            formControlName=\"firstName\"\r\n            placeholder=\"{{ 'REGISTER.SECOND_STEP.LBL_NAME' | translate }}\"\r\n            class=\"input\"\r\n            [maxLength]=\"50\"\r\n            aria-describedby=\"loginEmail_errorMsg\"\r\n            pInputText\r\n          />\r\n          <small\r\n            *ngIf=\"firstNameCtrl?.invalid && (firstNameCtrl?.dirty || firstNameCtrl?.touched)\"\r\n            id=\"loginEmail_errorMsg\"\r\n            class=\"p-error\"\r\n          >\r\n            <span *ngIf=\"firstNameCtrl?.hasError('required')\">{{ 'REGISTER.SECOND_STEP.NAME_REQUIRED' | translate }}</span>\r\n            <span *ngIf=\"firstNameCtrl?.hasError('Name')\">{{ 'REGISTER.SECOND_STEP.NAME_WRONG_FORMAT' | translate }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerLastName\" class=\"label required_icon\">{{ 'REGISTER.SECOND_STEP.LBL_SURNAME' | translate }}</label>\r\n          <input\r\n            (blur)=\"saveFields('lastName')\"\r\n            type=\"text\"\r\n            id=\"registerLastName\"\r\n            formControlName=\"lastName\"\r\n            placeholder=\"{{ 'REGISTER.SECOND_STEP.LBL_SURNAME' | translate }}\"\r\n            class=\"input\"\r\n            [maxLength]=\"50\"\r\n            aria-describedby=\"loginEmail_errorMsg\"\r\n            pInputText\r\n          />\r\n          <small\r\n            *ngIf=\"lastNameCtrl?.invalid && (lastNameCtrl?.dirty || lastNameCtrl?.touched)\"\r\n            id=\"loginEmail_errorMsg\"\r\n            class=\"p-error\"\r\n          >\r\n            <span *ngIf=\"lastNameCtrl?.hasError('required')\">{{ 'REGISTER.SECOND_STEP.SURNAME_REQUIRED' | translate }}</span>\r\n            <span *ngIf=\"lastNameCtrl?.hasError('Name')\">{{ 'REGISTER.SECOND_STEP.SURNAME_WRONG_FORMAT' | translate }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerEmail\" class=\"label required_icon\">{{ 'REGISTER.SECOND_STEP.LBL_EMAIL' | translate }}</label>\r\n          <input\r\n            (blur)=\"saveFields('email')\"\r\n            type=\"email\"\r\n            id=\"registerEmail\"\r\n            formControlName=\"email\"\r\n            placeholder=\"{{ 'REGISTER.SECOND_STEP.EMAIL_PLACEHOLDER' | translate }}\"\r\n            class=\"input\"\r\n            [maxLength]=\"75\"\r\n            aria-describedby=\"loginEmail_errorMsg\"\r\n            pInputText\r\n          />\r\n          <small *ngIf=\"emailCtrl?.invalid && (emailCtrl?.dirty || emailCtrl?.touched)\" id=\"loginEmail_errorMsg\" class=\"p-error\">\r\n            <span *ngIf=\"emailCtrl?.hasError('required')\">{{ 'REGISTER.SECOND_STEP.EMAIL_REQUIRED' | translate }}</span>\r\n            <span *ngIf=\"emailCtrl?.hasError('Email')\">{{ 'REGISTER.SECOND_STEP.EMAIL_WRONG_FORMAT' | translate }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerCellphone\" class=\"label required_icon\">{{\r\n            'REGISTER.SECOND_STEP.LBL_PHONE_NUM' | translate\r\n          }}</label>\r\n          <input\r\n            (blur)=\"saveFields('cellphone')\"\r\n            type=\"text\"\r\n            id=\"registerCellphone\"\r\n            formControlName=\"cellphone\"\r\n            placeholder=\"{{ 'REGISTER.SECOND_STEP.LBL_PHONE_NUM' | translate }}\"\r\n            class=\"input\"\r\n            [maxLength]=\"15\"\r\n            aria-describedby=\"loginEmail_errorMsg\"\r\n            pInputText\r\n          />\r\n          <small\r\n            *ngIf=\"cellphoneCtrl?.invalid && (cellphoneCtrl?.dirty || cellphoneCtrl?.touched)\"\r\n            id=\"loginEmail_errorMsg\"\r\n            class=\"p-error\"\r\n          >\r\n            <span *ngIf=\"cellphoneCtrl?.hasError('required')\">{{ 'REGISTER.SECOND_STEP.CELLPHONE_REQUIRED' | translate }}</span>\r\n            <span *ngIf=\"cellphoneCtrl?.hasError('Cellphone')\">{{\r\n              'REGISTER.SECOND_STEP.CELLPHONE_WRONG_FORMAT' | translate\r\n            }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"dash_divider marginBottom_1\"></div>\r\n    <div class=\"row\">\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerPassword\" [ngClass]=\"!isGoogleRegister ? 'required_icon label' : 'label'\">\r\n            {{ 'REGISTER.SECOND_STEP.LBL_PASSWORD' | translate }}\r\n          </label>\r\n          <div class=\"inputIconCont\">\r\n            <input\r\n              (blur)=\"saveFields('password')\"\r\n              type=\"password\"\r\n              id=\"registerPassword\"\r\n              formControlName=\"password\"\r\n              placeholder=\"{{ 'REGISTER.SECOND_STEP.LBL_PASSWORD' | translate }}\"\r\n              class=\"input\"\r\n              [maxLength]=\"50\"\r\n              aria-describedby=\"loginEmail_errorMsg\"\r\n              pPassword\r\n              [showPassword]=\"showPassword\"\r\n            />\r\n            <button type=\"button\" class=\"inputIconBtn\" (click)=\"showPassword = !showPassword\" title=\"Show/hide password\">\r\n              <i class=\"mdi\" [class]=\"showPassword ? 'mdi-eye-off' : 'mdi-eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <small *ngIf=\"passCtrl?.invalid && (passCtrl?.dirty || passCtrl?.touched)\" id=\"loginEmail_errorMsg\" class=\"p-error\">\r\n            <span *ngIf=\"passCtrl?.hasError('required')\">{{ 'REGISTER.SECOND_STEP.PASSWORD_REQUIRED' | translate }}</span>\r\n            <span *ngIf=\"passCtrl?.hasError('Password')\">{{ 'REGISTER.SECOND_STEP.PASSWORD_WRONG_FORMAT' | translate }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 col_lg_6\">\r\n        <div class=\"inputCont\">\r\n          <label for=\"registerConfirmPassword\" [ngClass]=\"!isGoogleRegister ? 'required_icon label' : 'label'\">\r\n            {{ 'REGISTER.SECOND_STEP.LBL_REPEAT_PASSWORD' | translate }}\r\n          </label>\r\n          <div class=\"inputIconCont\">\r\n            <input\r\n              (blur)=\"saveFields('confirmPassword')\"\r\n              type=\"password\"\r\n              id=\"registerConfirmPassword\"\r\n              formControlName=\"confirmPassword\"\r\n              placeholder=\"{{ 'REGISTER.SECOND_STEP.LBL_REPEAT_PASSWORD' | translate }}\"\r\n              class=\"input\"\r\n              [maxLength]=\"50\"\r\n              aria-describedby=\"loginEmail_errorMsg\"\r\n              pPassword\r\n              [showPassword]=\"showConfirmPassword\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"inputIconBtn\"\r\n              (click)=\"showConfirmPassword = !showConfirmPassword\"\r\n              title=\"Show/hide password\"\r\n            >\r\n              <i class=\"mdi\" [class]=\"showConfirmPassword ? 'mdi-eye-off' : 'mdi-eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <small\r\n            *ngIf=\"confirmPassCtrl?.invalid && (confirmPassCtrl?.dirty || confirmPassCtrl?.touched)\"\r\n            id=\"loginEmail_errorMsg\"\r\n            class=\"p-error\"\r\n          >\r\n            <span *ngIf=\"confirmPassCtrl?.hasError('required')\">{{\r\n              'REGISTER.SECOND_STEP.PASSWORD_CONFIRM_REQUIRED' | translate\r\n            }}</span>\r\n            <span *ngIf=\"confirmPassCtrl?.hasError('Password')\">{{\r\n              'REGISTER.SECOND_STEP.PASSWORD_WRONG_FORMAT' | translate\r\n            }}</span>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"col_12 password_msg\">\r\n        <small>{{ 'REGISTER.SECOND_STEP.PASSWORD_INSTRUCTIONS' | translate }}</small>\r\n      </div>\r\n    </div>\r\n    <div class=\"p-field-checkbox marginTop_1\">\r\n      <p-checkbox formControlName=\"agreeOfTerms\" value=\"agreeOfTerms\" [binary]=\"true\"></p-checkbox>\r\n      <label\r\n        >{{ 'REGISTER.SECOND_STEP.AGREE' | translate }}<a href=\"\">{{ 'REGISTER.SECOND_STEP.TERMS_COND' | translate }}</a> &\r\n        <a href=\"\">{{ 'REGISTER.SECOND_STEP.POLI_PRIV' | translate }}</a></label\r\n      >\r\n    </div>\r\n    <div class=\"loginFoot marginTop_3\">\r\n      <button name=\"goBack\" (click)=\"goBack()\" class=\"button button_outline button_small\" type=\"button\">\r\n        {{ 'REGISTER.SECOND_STEP.GO_BACK' | translate }}\r\n      </button>\r\n      <button name=\"submit\" type=\"submit\" class=\"button button_big\">\r\n        {{ 'REGISTER.SECOND_STEP.CONTINUE' | translate }}\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { RegisterUserService } from '../../../../services/register-user.service';\r\n\r\n@Component({\r\n  selector: 'aft-scout-register-third-step',\r\n  templateUrl: './register-third-step.component.html',\r\n  styleUrls: ['./register-third-step.component.scss'],\r\n})\r\nexport class RegisterThirdStepComponent implements OnDestroy {\r\n  subscription: Subscription;\r\n\r\n  constructor(private _registerUserService: RegisterUserService, private _router: Router) {\r\n    this.subscription = this._registerUserService.confirmationEmailSent$.subscribe(emailSent => {\r\n      if (!emailSent) {\r\n        this._registerUserService.resetRegistration();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"card_large marginTop_3 marginBottom_3\">\r\n  <div class=\"row\">\r\n    <!--div class=\"col_2\">\r\n      <img class=\"imgResponsive\" src=\"../../../../../../../assets/images/logos/after90-logo.png\" alt=\"TheRealScout_Logo\">\r\n    </div-->\r\n    <div class=\"col_12\">\r\n      <h3 class=\"cardHead\">{{ 'REGISTER.THIRD_STEP.TITLE' | translate }}</h3>\r\n      <p class=\"cardSubtitle\">{{ 'REGISTER.THIRD_STEP.SUBTITLE' | translate }}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loginFoot\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { APP_ROUTES, AuthService, CustomValidators, MessagingService } from '@aft-core';\r\n\r\n@Component({\r\n  selector: 'aft-scout-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.scss'],\r\n})\r\nexport class ResetComponent implements OnInit {\r\n  form: FormGroup;\r\n  showPassword = false;\r\n  showConfirmPassword = false;\r\n  resetToken = '';\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _messageService: MessagingService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this.form = this._fb.group({\r\n      password: ['', [Validators.required, CustomValidators.Password]],\r\n      confirmPassword: ['', [Validators.required, CustomValidators.Password]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.resetToken = this._route.snapshot.params.token;\r\n    if (!this.resetToken) {\r\n      this._router.navigate(APP_ROUTES.LANDING);\r\n    }\r\n  }\r\n\r\n  get passCtrl() {\r\n    return this.form.controls.password;\r\n  }\r\n\r\n  get passConfirmCtrl() {\r\n    return this.form.controls.confirmPassword;\r\n  }\r\n\r\n  onBlur(controlName: string) {\r\n    this.form.controls[controlName].markAsDirty();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const formValues = this.form.value;\r\n      if (formValues.password !== formValues.confirmPassword) {\r\n        this._messageService.error('RESET.TOAST.PASSWORD_ERROR.TITLE', 'RESET.TOAST.PASSWORD_ERROR.MESSAGE');\r\n      } else {\r\n        this._authService.resetPassword({\r\n          ...formValues,\r\n          token: this.resetToken,\r\n        });\r\n      }\r\n    } else {\r\n      this._messageService.error('RESET.TOAST.REQUIRED_ERROR.TITLE', 'RESET.TOAST.REQUIRED_ERROR.MESSAGE');\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" class=\"cardBody\" (ngSubmit)=\"onSubmit()\">\r\n  <h2 class=\"cardTitle\">{{ 'RESET.TITLE' | translate }}</h2>\r\n  <div class=\"alert alert_danger marginBottom_2\" style=\"display: none\">\r\n    <i class=\"mdi mdi-close-octagon alert__icon\"></i>\r\n    <div>\r\n      <h3 class=\"alert__title\">Invalid email/password</h3>\r\n      <p class=\"alert__text\">Please check your credentials and try again.</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"inputCont\">\r\n    <label for=\"resetPassword\" class=\"label\">{{ 'RESET.NEW_PASSWORD' | translate }}</label>\r\n    <div class=\"inputIconCont\">\r\n      <input\r\n        (blur)=\"onBlur('password')\"\r\n        formControlName=\"password\"\r\n        type=\"password\"\r\n        pPassword\r\n        placeholder=\"{{ 'RESET.NEW_PASSWORD' | translate }}\"\r\n        id=\"resetPassword\"\r\n        class=\"inputIconField\"\r\n        [showPassword]=\"showPassword\"\r\n        [feedback]=\"false\"\r\n        aria-describedby=\"loginPassword_errorMsg\"\r\n        [maxLength]=\"50\"\r\n      />\r\n      <button type=\"button\" class=\"inputIconBtn\" (click)=\"showPassword = !showPassword\" title=\"Show/hide password\">\r\n        <i class=\"mdi\" [class]=\"showPassword ? 'mdi-eye-off' : 'mdi-eye'\"></i>\r\n      </button>\r\n    </div>\r\n    <small *ngIf=\"passCtrl?.invalid && (passCtrl?.dirty || passCtrl?.touched)\" id=\"loginPassword_errorMsg\" class=\"p-error\">\r\n      <span *ngIf=\"passCtrl?.hasError('required')\">{{ 'RESET.NEW_PASSWORD_REQUIRED' | translate }}</span>\r\n      <span *ngIf=\"passCtrl?.hasError('Password')\">{{ 'RESET.PASSWORD_FORMAT' | translate }}</span>\r\n    </small>\r\n  </div>\r\n  <div class=\"inputCont\">\r\n    <label for=\"resetConfirmPassword\" class=\"label\">{{ 'RESET.NEW_PASSWORD_REPEAT' | translate }}</label>\r\n    <div class=\"inputIconCont\">\r\n      <input\r\n        (blur)=\"onBlur('confirmPassword')\"\r\n        formControlName=\"confirmPassword\"\r\n        type=\"password\"\r\n        pPassword\r\n        placeholder=\"{{ 'RESET.NEW_PASSWORD_REPEAT' | translate }}\"\r\n        id=\"resetPasswordCofirm\"\r\n        class=\"inputIconField\"\r\n        [showPassword]=\"showConfirmPassword\"\r\n        [feedback]=\"false\"\r\n        aria-describedby=\"loginPassword_errorMsg\"\r\n        [maxLength]=\"50\"\r\n      />\r\n      <button type=\"button\" class=\"inputIconBtn\" (click)=\"showConfirmPassword = !showConfirmPassword\" title=\"Show/hide password\">\r\n        <i class=\"mdi\" [class]=\"showConfirmPassword ? 'mdi-eye-off' : 'mdi-eye'\"></i>\r\n      </button>\r\n    </div>\r\n    <small\r\n      *ngIf=\"passConfirmCtrl?.invalid && (passConfirmCtrl?.dirty || passConfirmCtrl?.touched)\"\r\n      id=\"loginPassword_errorMsg\"\r\n      class=\"p-error\"\r\n    >\r\n      <span *ngIf=\"passConfirmCtrl?.hasError('required')\">{{ 'RESET.NEW_PASSWORD_REPEAT_REQUIRED' | translate }}</span>\r\n      <span *ngIf=\"passConfirmCtrl?.hasError('Password')\">{{ 'RESET.PASSWORD_FORMAT' | translate }}</span>\r\n    </small>\r\n  </div>\r\n  <div>\r\n    <button id=\"submitBtn\" name=\"submit\" type=\"submit\" class=\"button button_big button_block\">\r\n      {{ 'RESET.SUBMIT_BUTTON' | translate }}\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RegisterUserService } from '@scouting-public/services/register-user.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { APP_ROUTES, LANGUAGES_ENUM, STORAGE_KEYS_ENUM } from '@aft-core';\r\n\r\n@Component({\r\n  selector: 'aft-scout-validate-invite',\r\n  templateUrl: './validate-invite.component.html',\r\n  styleUrls: ['./validate-invite.component.scss'],\r\n})\r\nexport class ValidateInviteComponent implements OnInit {\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _registerUserService: RegisterUserService,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  // Validates the token received by the URL\r\n  ngOnInit(): void {\r\n    const { token, lang } = this._route.snapshot.params;\r\n\r\n    this._changeLanguage(lang);\r\n    if (token) {\r\n      this._registerUserService.validateInvite({ token });\r\n    } else {\r\n      // No token, redirect to home\r\n      this._router.navigate(APP_ROUTES.LANDING);\r\n    }\r\n  }\r\n\r\n  private _changeLanguage(lang: LANGUAGES_ENUM) {\r\n    const languageExists = Object.values(LANGUAGES_ENUM).includes(lang);\r\n    const newLang = languageExists ? lang : this._translateService.currentLang;\r\n\r\n    window.localStorage.setItem(STORAGE_KEYS_ENUM.LANGUAGE, newLang);\r\n    this._translateService.use(newLang);\r\n  }\r\n}\r\n","<div class=\"card_small\">\r\n  <h1 class=\"cardHead\">\r\n    <!-- <img src=\"\" alt=\"TheRealScout_logo\" class=\"authCardLogo\" /> -->\r\n    {{ 'REGISTER.FIRST_STEP.TITLE' | translate }}\r\n  </h1>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterUserService } from '@scouting-public/services/register-user.service';\r\nimport { APP_ROUTES, LANGUAGES_ENUM, STORAGE_KEYS_ENUM } from '@aft-core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'aft-scout-validate',\r\n  templateUrl: './validate-token.component.html',\r\n  styleUrls: ['./validate-token.component.scss'],\r\n})\r\nexport class ValidateTokenComponent implements OnInit {\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _registerUserService: RegisterUserService,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  // Validates the token received by the URL\r\n  ngOnInit(): void {\r\n    const { token, lang } = this._route.snapshot.params;\r\n\r\n    this._changeLanguage(lang);\r\n    if (token) {\r\n      this._registerUserService.validateToken({ token });\r\n    } else {\r\n      // No token, redirect to home\r\n      this._router.navigate(APP_ROUTES.LANDING);\r\n    }\r\n  }\r\n\r\n  private _changeLanguage(lang: LANGUAGES_ENUM) {\r\n    const languageExists = Object.values(LANGUAGES_ENUM).includes(lang);\r\n    const newLang = languageExists ? lang : this._translateService.currentLang;\r\n\r\n    window.localStorage.setItem(STORAGE_KEYS_ENUM.LANGUAGE, newLang);\r\n    this._translateService.use(newLang);\r\n  }\r\n}\r\n","<div class=\"card_small\">\r\n  <h1 class=\"cardHead\">\r\n    <!-- <img src=\"\" alt=\"TheRealScout_logo\" class=\"authCardLogo\" /> -->\r\n    {{ 'REGISTER.FIRST_STEP.TITLE' | translate }}\r\n  </h1>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aft-scout-public-layout',\r\n  templateUrl: './public-layout.component.html',\r\n  styleUrls: ['./public-layout.component.scss'],\r\n})\r\nexport class PublicLayoutComponent {}\r\n","<div class=\"bkgCont\" style=\"background-image: url('assets/images/pictures/authBkg_desktop.jpg')\">\r\n  <img class=\"environmentLabel\" alt=\"\" src=\"assets/images/environment_labels/environment_label.png\" />\r\n  <main class=\"card authCard\">\r\n    <h1 class=\"cardHead\">\r\n      <!-- <img src=\"\" alt=\"TheRealScout_logo\" class=\"authCardLogo\" /> -->\r\n    </h1>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n  <div class=\"powered_by_label\">\r\n    <span>Powered by</span>\r\n    <img class=\"\" alt=\"powered by 2bePro\" src=\"assets/images/logos/2bePro_logo_sm.png\" />\r\n  </div>\r\n</div>\r\n<aft-scout-public-footer></aft-scout-public-footer>\r\n","export enum PROVIDER_TYPES {\r\n  GOOGLE = 'google',\r\n  LINKEDIN = 'linkedIn',\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PublicGuard } from '@aft-core';\r\n\r\nimport { PublicLayoutComponent } from '@scouting-public/components/public-layout/public-layout.component';\r\nimport { LoginComponent } from '@scouting-public-components/login/login.component';\r\nimport { ForgotComponent } from '@scouting-public-components/forgot/forgot.component';\r\nimport { ResetComponent } from '@scouting-public-components/reset/reset.component';\r\nimport { RegisterFirstStepComponent } from '@scouting-public-components/register-first-step/register-first-step.component';\r\nimport { ValidateTokenComponent } from '@scouting-public-components/validate-token/validate-token.component';\r\nimport { ValidateInviteComponent } from '@scouting-public-components/validate-invite/validate-invite.component';\r\nimport { RegisterPaymentComponent } from '@scouting-public-components/register-payment/register-payment.component';\r\nimport { RegisterThirdStepComponent } from '@scouting-public-components/register-third-step/register-third-step.component';\r\nimport { RegisterSecondStepComponent } from '@scouting-public-components/register-second-step/register-second-step.component';\r\nimport { PUBLIC_MODULE_ROUTES } from './public.routes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: PUBLIC_MODULE_ROUTES.LOGIN,\r\n    component: PublicLayoutComponent,\r\n    canActivate: [PublicGuard],\r\n    children: [\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.LOGIN,\r\n        component: LoginComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.FORGOT_PASSWORD,\r\n        component: ForgotComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.RESET_PASSWORD,\r\n        component: ResetComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER,\r\n        component: RegisterFirstStepComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER_SECOND_STEP,\r\n        component: RegisterSecondStepComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER_THIRD_STEP,\r\n        component: RegisterThirdStepComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER_VALIDATE_TOKEN,\r\n        component: ValidateTokenComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER_VALIDATE_INVITE,\r\n        component: ValidateInviteComponent,\r\n      },\r\n      {\r\n        path: PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT,\r\n        component: RegisterPaymentComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PublicRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { UiComponentsModule } from '@sw-ui-components';\r\n\r\nimport { LoginComponent } from '@scouting-public-components/login/login.component';\r\nimport { ResetComponent } from '@scouting-public-components/reset/reset.component';\r\nimport { ForgotComponent } from '@scouting-public-components/forgot/forgot.component';\r\nimport { PublicLayoutComponent } from '@scouting-public/components/public-layout/public-layout.component';\r\nimport { PublicFooterComponent } from '@scouting-public-components/public-footer/public-footer.component';\r\nimport { GoogleButtonComponent } from '@scouting-public-components/google-button/google-button.component';\r\nimport { RegisterFirstStepComponent } from '@scouting-public-components/register-first-step/register-first-step.component';\r\nimport { RegisterSecondStepComponent } from '@scouting-public-components/register-second-step/register-second-step.component';\r\nimport { RegisterThirdStepComponent } from '@scouting-public-components/register-third-step/register-third-step.component';\r\nimport { RegisterPaymentComponent } from '@scouting-public-components/register-payment/register-payment.component';\r\nimport { ValidateTokenComponent } from '@scouting-public-components/validate-token/validate-token.component';\r\nimport { ValidateInviteComponent } from '@scouting-public-components/validate-invite/validate-invite.component';\r\nimport { PublicRoutingModule } from './public-routing.module';\r\nimport { LoginService } from './services/login.service';\r\nimport { RegisterUserService } from './services/register-user.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    ResetComponent,\r\n    ForgotComponent,\r\n    PublicLayoutComponent,\r\n    PublicFooterComponent,\r\n    GoogleButtonComponent,\r\n    RegisterFirstStepComponent,\r\n    RegisterSecondStepComponent,\r\n    RegisterThirdStepComponent,\r\n    RegisterPaymentComponent,\r\n    ValidateTokenComponent,\r\n    ValidateInviteComponent,\r\n  ],\r\n  imports: [CommonModule, PublicRoutingModule, UiComponentsModule, ReactiveFormsModule],\r\n  providers: [LoginService, RegisterUserService],\r\n})\r\nexport class PublicModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { ApiService, API_TYPE_ENUM, ILoginResponse, AuthService, ILoginRequest, MessagingService } from '@aft-core';\r\nimport { IGoogleLoginRequest, IGoogleSignInResponse } from '../interfaces/google';\r\nimport { RegisterUserService } from './register-user.service';\r\nimport { IRegisteringUser } from '../interfaces/register';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  constructor(\r\n    private _apiService: ApiService,\r\n    private _authService: AuthService,\r\n    private _registerUserService: RegisterUserService,\r\n    private _messagingService: MessagingService\r\n  ) {}\r\n\r\n  // Determines if user its logged in or should register\r\n  googleLogin(userInfo: IGoogleLoginRequest): Observable<IGoogleSignInResponse> {\r\n    return this._apiService.post(API_TYPE_ENUM.IDENTITY, 'sessions/scoutGoogle', userInfo).pipe(\r\n      map((response: ILoginResponse) => {\r\n        // Log in user\r\n        if (response?.element) {\r\n          this._authService.loginUser(response);\r\n          return {\r\n            shouldRegister: false,\r\n            shouldPay: false,\r\n            isLogged: true,\r\n          };\r\n        }\r\n        return {\r\n          shouldRegister: false,\r\n          shouldPay: false,\r\n          isLogged: true,\r\n        };\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        switch (error.status) {\r\n          case 402: // Unauthorized or user does not exist, should register\r\n            const user: IRegisteringUser = {\r\n              firstName: error.error.Data.userFirstName,\r\n              lastName: error.error.Data.userLastName,\r\n              email: error.error.Data.userEmail,\r\n              cellphone: error.error.Data.userPhone,\r\n              language: '',\r\n              professionId: 0,\r\n            };\r\n            this._registerUserService.updateUserInfo(user);\r\n            return of({\r\n              shouldRegister: false,\r\n              shouldPay: true,\r\n              isLogged: false,\r\n            });\r\n          case 401: // Unauthorized or user does not exist, should register\r\n            return of({\r\n              shouldRegister: true,\r\n              shouldPay: false,\r\n              isLogged: false,\r\n            });\r\n          case 400: // Email and providerId do not match, should NOT register\r\n          default:\r\n            // Generic server error, should NOT register\r\n            return of({\r\n              shouldRegister: false,\r\n              shouldPay: false,\r\n              isLogged: false,\r\n            });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Determinar si el usuario pagó o no y dirigirlo a donde corresponda\r\n  checkPayment(loginRequest: ILoginRequest): Observable<boolean | undefined> {\r\n    return this._apiService.post(API_TYPE_ENUM.IDENTITY, 'sessions/scouting', loginRequest).pipe(\r\n      map((response: ILoginResponse) => {\r\n        // Log in user\r\n        if (response?.element) {\r\n          this._authService.loginUser(response);\r\n          return undefined;\r\n        }\r\n        return false;\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        // Usuario no pago = StatusCode: 402 = Message: \"This user account has a pending payment\" =\r\n        // Usuario Inactivo = StatusCode: 403\r\n        switch (error.error.StatusCode) {\r\n          case 402: // User has pending payment, should redirect to payment\r\n            const user: IRegisteringUser = {\r\n              firstName: error.error.Data.userFirstName,\r\n              lastName: error.error.Data.userLastName,\r\n              email: error.error.Data.userEmail,\r\n              cellphone: error.error.Data.userPhone,\r\n              language: '',\r\n              professionId: 0,\r\n            };\r\n            this._registerUserService.updateUserInfo(user);\r\n            return of(true);\r\n          case 403: // User is disabled, should show error message\r\n            this._messagingService.error('LOGIN.TOAST.ERROR_INACTIVE.TITLE', 'LOGIN.TOAST.ERROR_INACTIVE.MESSAGE');\r\n            return of(false);\r\n          default:\r\n            // Generic server error, should NOT login\r\n            this._handleLoginError();\r\n            return of(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private _handleLoginError(): void {\r\n    this._authService.isLoggedIn$.next(false);\r\n    this._messagingService.error('LOGIN.TOAST.ERROR.TITLE', 'LOGIN.TOAST.ERROR.MESSAGE');\r\n  }\r\n}\r\n\r\n// El error viene con este objeto adentro (Data):\r\n// userEmail: \"rcaram@switch.com.uy\"\r\n// userFirstName: \"Ramiro\"\r\n// userId: \"2dec19fd-3a1f-457e-b305-58e13e429c04\"\r\n// userLastName: \"Caram\"\r\n// userPhone: \"099858948\"\r\n","import { ApiService, API_TYPE_ENUM, APP_ROUTES, MessagingService } from '@aft-core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SocialUser } from 'angularx-social-login';\r\n\r\nimport { IRegisteringUser, IRegisterUserRequest, IUserProfession } from '../interfaces/register';\r\nimport { IValidateTokenRequest, IValidateTokenResponse } from '../interfaces/validate-token';\r\nimport { generateFullPublicModuleRoute, PUBLIC_MODULE_ROUTES } from '../public.routes';\r\nimport { IGoogleSignInRequest } from '@scouting-public/interfaces/google';\r\nimport { IValidateInviteRequest, IValidateInviteResponse } from '@scouting-public/interfaces/validate-invite';\r\n\r\nconst initialState = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  cellphone: '',\r\n  language: 'es',\r\n  profession: { name: '', id: 0 },\r\n  professionId: 0,\r\n};\r\n\r\n@Injectable()\r\nexport class RegisterUserService {\r\n  confirmationEmailSent$ = new BehaviorSubject<boolean>(false);\r\n  isPlatformRegister$ = new BehaviorSubject<boolean>(false);\r\n  isInviteRegister$ = new BehaviorSubject<boolean>(false);\r\n\r\n  private registeringUser: IRegisteringUser = { ...initialState };\r\n\r\n  constructor(\r\n    private _apiService: ApiService,\r\n    private _translateService: TranslateService,\r\n    private _router: Router,\r\n    private _messagingService: MessagingService\r\n  ) {}\r\n\r\n  get user() {\r\n    return this.registeringUser;\r\n  }\r\n\r\n  // Selects Profession\r\n  changeProfession(profession: IUserProfession): void {\r\n    this.user.profession = profession;\r\n    this.user.professionId = profession.id;\r\n  }\r\n\r\n  // Resets service to initial state\r\n  resetRegistration() {\r\n    this.isPlatformRegister$.next(false);\r\n    this.isInviteRegister$.next(false);\r\n    this.registeringUser = { ...initialState };\r\n    this._router.navigate(APP_ROUTES.LANDING);\r\n  }\r\n\r\n  // Updates user info\r\n  updateUserInfo(userInfo: IRegisteringUser) {\r\n    this.registeringUser = {\r\n      ...this.user,\r\n      ...userInfo,\r\n    };\r\n\r\n    this.isPlatformRegister$.next(!!this.registeringUser.googleId);\r\n  }\r\n\r\n  // Updates user info from google\r\n  updateGoogleUserInfo(googleUser: SocialUser): void {\r\n    this.registeringUser = {\r\n      ...this.registeringUser,\r\n      firstName: googleUser.firstName,\r\n      lastName: googleUser.lastName,\r\n      email: googleUser.email,\r\n      photoUrl: googleUser.photoUrl,\r\n      googleId: googleUser.idToken,\r\n    };\r\n\r\n    this.isPlatformRegister$.next(!!this.registeringUser.googleId);\r\n\r\n    // If professionId its loaded, it means the register its being done from the 1 step, so redirect to 2nd step\r\n    this._router.navigate(\r\n      generateFullPublicModuleRoute(\r\n        this.registeringUser.professionId ? PUBLIC_MODULE_ROUTES.REGISTER_SECOND_STEP : PUBLIC_MODULE_ROUTES.REGISTER\r\n      )\r\n    );\r\n  }\r\n\r\n  // Normal account creation\r\n  registerUser() {\r\n    const newUser: IRegisterUserRequest = {\r\n      firstName: this.user.firstName,\r\n      lastName: this.user.lastName,\r\n      password: this.user.password,\r\n      cellphone: this.user.cellphone,\r\n      email: this.user.email,\r\n      professionId: this.user.professionId,\r\n      language: this._translateService.currentLang,\r\n    };\r\n\r\n    if (this.user.invitationEmailToken) {\r\n      newUser.invitationEmailToken = this.user.invitationEmailToken;\r\n    }\r\n\r\n    this._apiService.post(API_TYPE_ENUM.IDENTITY, 'users/scouts', newUser).subscribe(\r\n      () => {\r\n        // Normal user registered\r\n        if (!this.isInviteRegister$.value) {\r\n          this.confirmationEmailSent$.next(true);\r\n          this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_THIRD_STEP));\r\n        } else {\r\n          // Invited user registered\r\n          // Payment method redirection goes here depending on the invitation - TBD\r\n          this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT));\r\n        }\r\n      },\r\n      () => {\r\n        this._messagingService.error('REGISTER.TOAST.EMAIL_ERROR.TITLE', 'REGISTER.TOAST.EMAIL_ERROR.MESSAGE');\r\n      }\r\n    );\r\n  }\r\n\r\n  // Validates invite\r\n  validateInvite(inviteRequest: IValidateInviteRequest) {\r\n    this._apiService.get(API_TYPE_ENUM.IDENTITY, `scouts/inviteValidation/${inviteRequest.token}`).subscribe(\r\n      (response: IValidateInviteResponse) => {\r\n        this.registeringUser = {\r\n          ...initialState,\r\n          firstName: response.element.firstName,\r\n          lastName: response.element.lastName,\r\n          email: response.element.email,\r\n          invitationEmailToken: inviteRequest.token,\r\n        };\r\n        this.isInviteRegister$.next(true);\r\n        this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER));\r\n      },\r\n      () => {\r\n        this._messagingService.error('REGISTER.TOAST.TOKEN_ERROR.TITLE', 'REGISTER.TOAST.TOKEN_ERROR.MESSAGE');\r\n        this._router.navigate(APP_ROUTES.LANDING);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Validates account creation\r\n  validateToken(validateRequest: IValidateTokenRequest) {\r\n    this._apiService.post(API_TYPE_ENUM.IDENTITY, 'scouts/validate', validateRequest).subscribe(\r\n      (response: IValidateTokenResponse) => {\r\n        this.registeringUser = {\r\n          ...initialState,\r\n          firstName: response.element.firstName,\r\n          lastName: response.element.lastName,\r\n          email: response.element.email,\r\n          cellphone: response.element.cellphone,\r\n        };\r\n        this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT));\r\n      },\r\n      () => {\r\n        this._messagingService.error('REGISTER.TOAST.TOKEN_ERROR.TITLE', 'REGISTER.TOAST.TOKEN_ERROR.MESSAGE');\r\n        this._router.navigate(APP_ROUTES.LANDING);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Google account creation\r\n  registerGoogleUser() {\r\n    const newUser: IGoogleSignInRequest = {\r\n      firstName: this.user.firstName,\r\n      lastName: this.user.lastName,\r\n      cellphone: this.user.cellphone,\r\n      email: this.user.email,\r\n      professionId: this.user.professionId,\r\n      language: this._translateService.currentLang,\r\n      googleId: this.user.googleId,\r\n      googleImage: this.user.photoUrl,\r\n    };\r\n\r\n    return this._apiService.post(API_TYPE_ENUM.IDENTITY, 'scouts/googleSignIn', newUser).subscribe(\r\n      () => {\r\n        this._router.navigate(generateFullPublicModuleRoute(PUBLIC_MODULE_ROUTES.REGISTER_PAYMENT));\r\n      },\r\n      () => {\r\n        this._messagingService.error('REGISTER.TOAST.EMAIL_ERROR.TITLE', 'REGISTER.TOAST.EMAIL_ERROR.MESSAGE');\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}